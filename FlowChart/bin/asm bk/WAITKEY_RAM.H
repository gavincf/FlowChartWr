;----------------------
; RAM
;-----------------------------



DP_USER_FLAG_A	DS	1
;.0=1: CH1 END
;.1=1: CH2 END
;.2=1: MS1 END
;.3=1: CH3 END; multi
;.4=1: new KEY0
;.5=1: new KEY1
;.6=1: new KEY2 / NOTE0 END
;.7=1: new KEY3 / NOTE1 END

DP_USER_FLAG_B	DS	1
;.0: CNT0
;.1: CNT1
;.2: CNT2
;.3: CNT3 ; multi  / WIPER_PATT_DLYCNT0
;.4: VD ;multi
;.5: EQU_NEXT ; multi
;.6: SWPWM/WIPER PATT end; multi
;.7: auto CNT REACH

.IFDEF C_CHKSKEY_EN
	.IF( (C_SKEY0_EN .EQ. 1).OR.(C_SKEY1_EN .EQ. 1).OR.(C_SKEY2_EN .EQ. 1).OR.(C_SKEY3_EN .EQ. 1).OR.(C_SKEY4_EN .EQ. 1).OR.(C_SKEY5_EN .EQ. 1).OR.(C_SKEY6_EN .EQ. 1).OR.(C_SKEY7_EN .EQ. 1)  )
DP_SKEY_FLAG0	DS	1
	.ENDIF
	.IF( (C_SKEY8_EN .EQ. 1).OR.(C_SKEY9_EN .EQ. 1).OR.(C_SKEY10_EN .EQ. 1).OR.(C_SKEY11_EN .EQ. 1).OR.(C_SKEY12_EN .EQ. 1).OR.(C_SKEY13_EN .EQ. 1).OR.(C_SKEY14_EN .EQ. 1).OR.(C_SKEY15_EN .EQ. 1)  )
DP_SKEY_FLAG1	DS	1
	.ENDIF
	.IF( (C_SKEY16_EN .EQ. 1).OR.(C_SKEY17_EN .EQ. 1).OR.(C_SKEY18_EN .EQ. 1).OR.(C_SKEY19_EN .EQ. 1).OR.(C_SKEY20_EN .EQ. 1).OR.(C_SKEY21_EN .EQ. 1).OR.(C_SKEY22_EN .EQ. 1).OR.(C_SKEY23_EN .EQ. 1)  )
DP_SKEY_FLAG2	DS	1
	.ENDIF
.ENDIF


C_SPCH1_NO_2B_EN EQU 	0
SPCH1_NO	DS	1
.IF ( C_SPCH1_NO_2B_EN .EQ. 1)
SPCH1_NO1	DS	1
.ENDIF


REG_EA		DS	1
REG_HL		DS	1

.IFDEF C_RANDOM_TABLE_USED
C_P0_ADDR_USE0 EQU 1
.ELSE
C_P0_ADDR_USE0 EQU 0
.ENDIF
.IFDEF C_EQU0_EN 
C_P0_ADDR_USE1 EQU 1
.ELSE
C_P0_ADDR_USE1 EQU 0
.ENDIF
.IFDEF C_GROUP_EN 
C_P0_ADDR_USE2 EQU 1
.ELSE
C_P0_ADDR_USE2 EQU 0
.ENDIF

C_P0_ADDR_USE3 EQU 1
.IF (( C_P0_ADDR_USE0 .EQ.1 ) .OR.( C_P0_ADDR_USE1 .EQ.1 ).OR.( C_P0_ADDR_USE2 .EQ.1 ).OR.( C_P0_ADDR_USE3 .EQ.1 ))
DP_ADDR	DS	2
.ENDIF


;=======================
; IN 'ISR' USED
;=======================
.IF ( C_TMGX_EN .EQ. 1)
DP_TMX_ADDR DS 2
DP_TMX_REG	DS	2
.ENDIF
;=======================


DP_ADDR_END DS 0
;================================================

USER_FLAG10	DS	1
;.4 -.7=1: 8MS/8.192/5.33MS
;.0=1: CHECK CH1
;.1=1: CHECK CH2
;.2=1: CHECK MS ; share for used
;.3=1: CHECK CH3; share for used; PAUSE FOR CNT0-3


USER_INT_FLAG0	DS	1
;.2=1: TMG0 2MS REACH
;.1=1: fxf:5.33M@6144MHZ,1.64MS@20MHZ REACH
;.3=1: 5.33M REACH
USER_INT_CNT0	DS	1
	


;===========================================
;pls define below RAMs
.IF ( C_DLYCNT0_ENABLE .EQ. 1 )
DLYCNT0	DS	1
DLYCNT01	DS	1
DLYCNT0_IDX DS	1 ;IdleTimer
IdleTimer EQU DLYCNT0_IDX
.ENDIF

.IF ( C_DLYCNT1_ENABLE .EQ. 1 )
DLYCNT1	DS	1
DLYCNT11	DS	1
DLYCNT1_IDX DS	1
.ENDIF

.IF ( C_DLYCNT2_ENABLE .EQ. 1 )
DLYCNT2	DS	1
DLYCNT21	DS	1
DLYCNT2_IDX DS 1
.ENDIF
.IF ( C_DLYCNT3_ENABLE .EQ. 1 )
DLYCNT3	DS	1
DLYCNT31	DS	1
DLYCNT3_IDX DS 1
.ENDIF

.IF (CHIPSERIES = 'N588H') .OR. (CHIPSERIES = 'N588J')
	.IF ( C_ULTRAIO_IO_EN .EQ. 0 )
	.IFNDEF BP0M_USER
		.IF ( C_BP0M_USER_USED .EQ. 1 )
BP0M_USER	DS	1
		.ENDIF
	.ENDIF
	.ENDIF

	.IF ( C_ULTRAIO_IO_EN .EQ. 0 )
	.IFNDEF BP1M_USER
		.IF ( C_BP1M_USER_USED .EQ. 1 )
BP1M_USER	DS	1
		.ENDIF
	.ENDIF
	.ENDIF
	.IF ( C_ULTRAIO_IO_EN .EQ. 0 )
	.IFNDEF BP2M_USER
		.IF ( C_BP2M_USER_USED .EQ. 1 )
BP2M_USER	DS	1
		.ENDIF
	.ENDIF
	.ENDIF
.ENDIF

.IF ( C_BP0_STATUS_EN .EQ. 1 )
BP0_STATUS	DS	1
.ENDIF
.IF ( C_BP1_STATUS_EN .EQ. 1 )
BP1_STATUS	DS	1
.ENDIF
.IF ( C_BP2_STATUS_EN .EQ. 1 )
BP2_STATUS	DS	1
.ENDIF
.IF ( C_BP3_STATUS_EN .EQ. 1 )
BP3_STATUS	DS	1
.ENDIF

.IFDEF C_N588HJ_LVD_EN
USER_ST0	DS	1
.ENDIF
.IFDEF C_N588L_LVD_EN
USER_ST0	DS	1
.ENDIF
.IFDEF C_N589VD_EN
USER_ST0	DS	1
.ENDIF
.IFDEF C_N589VD1_EN
USER_ST0	DS	1
.ENDIF


WB_KEYCH_CODE	DS	C_KEYCH_MAX ;not include matrix KEY






