
;=========================================================================
; MACRO
;=========================================================================
M_CLOSE_SPK MACRO

	.IF (CHIPSERIES = 'W567BS')
;	STZ	S0EN
	.ENDIF

	.if (CHIPSERIES = 'N567G') .OR. (CHIPSERIES = 'N567H') .OR. (CHIPSERIES = 'N567K')
;	STZ	SPEN
	.ENDIF
	.IF (CHIPSERIES = 'N588L')
;	STZ	SPEN
	.ENDIF
	.if (CHIPSERIES = 'N588H') .OR. (CHIPSERIES = 'N588J')
;	STZ	SPEN
	.ENDIF
	.IF (CHIPSERIES = 'W588AS')
	STZ	S0EN
	.ENDIF
	.IF (CHIPSERIES = 'W588CD')
	STZ	SPEN
	.ENDIF
	.IF (CHIPSERIES = 'N589A') .OR. (CHIPSERIES = 'N589B') .OR. (CHIPSERIES = 'N589C') .OR. (CHIPSERIES = 'N589D')
	.ENDIF
	ENDM
M_SET_SPK MACRO
	.IF (CHIPSERIES = 'W567BS')
	SET_SPEAKER_OUTPUT_TYPE_TO DAC_5mA	;USER S OPTION (DAC_5mA/ DAC_3mA/ PWM)
	.ENDIF
	.IF (CHIPSERIES = 'N567G') .OR. (CHIPSERIES = 'N567H') .OR. (CHIPSERIES = 'N567K')
;	SET_SPEAKER_OUTPUT_TYPE_TO DAC_5mA	;USER S OPTION (DAC_5mA/ DAC_3mA/ PWM)
	.ENDIF
	.IF (CHIPSERIES = 'N588L')
;	SET_SPEAKER_OUTPUT_TYPE_TO DAC_5mA	;USER S OPTION (DAC_5mA/ DAC_3mA/ PWM)
	.ENDIF
	.IF (CHIPSERIES = 'N588H') .OR. (CHIPSERIES = 'N588J')
;	SET_SPEAKER_OUTPUT_TYPE_TO DAC_5mA	;USER S OPTION (DAC_5mA/ DAC_3mA/ PWM)
	.ENDIF
	.IF (CHIPSERIES = 'W588AS')
	SET_SPEAKER_OUTPUT_TYPE_TO DAC_5mA	;USER S OPTION (DAC_5mA/ DAC_3mA/ PWM)
	.ENDIF
	.IF (CHIPSERIES = 'W588CD')
	NOP
	.ENDIF
	.IF (CHIPSERIES = 'N589A') .OR. (CHIPSERIES = 'N589B') .OR. (CHIPSERIES = 'N589C') .OR. (CHIPSERIES = 'N589D')
	.ENDIF
	ENDM

M_WDT_CLR MACRO
	.if (CHIPSERIES = 'N567G') .OR. (CHIPSERIES = 'N567H') .OR. (CHIPSERIES = 'N567K')
	LDA #CTL_CPU_WDT
	TSB !CTL_CPU
	.ENDIF
	.if (CHIPSERIES = 'N589A') .OR. (CHIPSERIES = 'N589B') .OR. (CHIPSERIES = 'N589C') .OR. (CHIPSERIES = 'N589D')
	LDA #WDTC_CLR
	STA !WDTC
	.ENDIF
	.if (CHIPSERIES = 'N588L')
.IFDEF C_CHK_LVD_EN
	LDA #CTL_CPU_WDT
	TSB !CTL_CPU
.ELSE
	LDA #CTL_CPU_WDT
	TSB !CTL_CPU
.ENDIF
	.ENDIF
	.if (CHIPSERIES = 'N588H') .OR. (CHIPSERIES = 'N588J')
	WDT
	.ENDIF

	ENDM
M_MCU_STOP MACRO
	.if (CHIPSERIES = 'N567G') .OR. (CHIPSERIES = 'N567H') .OR. (CHIPSERIES = 'N567K')
	LDA #CTL_CPU_STOP
	TSB !CTL_CPU
	.ENDIF
	.if (CHIPSERIES = 'N588L')
	LDA #CTL_CPU_STOP
	TSB !CTL_CPU
	.ENDIF
	.IF (CHIPSERIES = 'N588H') .OR. (CHIPSERIES = 'N588J')
	ENTER_STOP
	.ENDIF
	.if (CHIPSERIES = 'N589A') .OR. (CHIPSERIES = 'N589B') .OR. (CHIPSERIES = 'N589C') .OR. (CHIPSERIES = 'N589D')
	STOP
	.ENDIF
	ENDM
M_INT_ENABLE MACRO VALUE
	.if (CHIPSERIES = 'N588H') .OR. (CHIPSERIES = 'N588J')
	LDA	#.LOW.VALUE
	TSB	!IEF0
	.ENDIF
	.if (CHIPSERIES = 'N588L')
	LDA	#.LOW.VALUE
	TSB	!IEF0
	.ENDIF
	.if (CHIPSERIES = 'N567G') .OR. (CHIPSERIES = 'N567H') .OR. (CHIPSERIES = 'N567K')
	LDA	#.LOW.VALUE
	TSB	!IEF0
	LDA	#.HIGH.VALUE
	TSB	!IEF1
	.ENDIF	
	.if (CHIPSERIES = 'N589A') .OR. (CHIPSERIES = 'N589B') .OR. (CHIPSERIES = 'N589C') .OR. (CHIPSERIES = 'N589D')
	LDA	#.LOW.VALUE
	TSB	!IEF0
	LDA	#.HIGH.VALUE
	TSB	!IEF1
	.ENDIF	
	ENDM
M_INT_DISABLE MACRO VALUE
	.if (CHIPSERIES = 'N588H') .OR. (CHIPSERIES = 'N588J')
	LDA	#.LOW.VALUE
	TRB	!IEF0
	.ENDIF
	.if (CHIPSERIES = 'N588L')
	LDA	#.LOW.VALUE
	TRB	!IEF0
	.ENDIF
	.if (CHIPSERIES = 'N567G') .OR. (CHIPSERIES = 'N567H') .OR. (CHIPSERIES = 'N567K')
	LDA	#.LOW.VALUE
	TRB	!IEF0
	LDA	#.HIGH.VALUE
	TRB	!IEF1
	.ENDIF	
	.if (CHIPSERIES = 'N589A') .OR. (CHIPSERIES = 'N589B') .OR. (CHIPSERIES = 'N589C') .OR. (CHIPSERIES = 'N589D')
	LDA	#.LOW.VALUE
	TRB	!IEF0
	LDA	#.HIGH.VALUE
	TRB	!IEF1
	.ENDIF	

	ENDM
	
M_SET_CNT0 MACRO VALUE
	LDA	#.LOW.VALUE
	STA	DLYCNT0
	LDA	#.HIGH.VALUE
	STA	DLYCNT0+1
	LDA	#C_CNT0_BIT

	TRB	<USER_FLAG_B
	ENDM
	
M_SET_CNT0_IDX MACRO VALUE,IDX
	LDA	#.LOW.VALUE
	STA	DLYCNT0
	LDA	#.HIGH.VALUE
	STA	DLYCNT0+1
	LDA	#C_CNT0_BIT
	TRB	<USER_FLAG_B
	LDA	#IDX
	STA	DLYCNT0_IDX
	
	ENDM

M_SET_CNT1 MACRO VALUE
	LDA	#.LOW.VALUE
	STA	DLYCNT1
	LDA	#.HIGH.VALUE
	STA	DLYCNT1+1
	LDA	#C_CNT1_BIT

	TRB	<USER_FLAG_B
	ENDM

M_SET_CNT1_IDX MACRO VALUE,IDX
	LDA	#.LOW.VALUE
	STA	DLYCNT1
	LDA	#.HIGH.VALUE
	STA	DLYCNT1+1
	LDA	#C_CNT1_BIT
	TRB	<USER_FLAG_B
	LDA	#IDX
	STA	DLYCNT1_IDX
	ENDM

M_SET_CNT2 MACRO VALUE
	LDA	#.LOW.VALUE
	STA	DLYCNT2
	LDA	#.HIGH.VALUE
	STA	DLYCNT2+1
	LDA	#C_CNT2_BIT
	TRB	<USER_FLAG_B
	ENDM

M_SET_CNT2_IDX MACRO VALUE,IDX
	LDA	#.LOW.VALUE
	STA	DLYCNT2
	LDA	#.HIGH.VALUE
	STA	DLYCNT2+1
	LDA	#C_CNT2_BIT
	TRB	<USER_FLAG_B
	LDA	#IDX
	STA	DLYCNT2_IDX
	ENDM

M_SET_CNT3 MACRO VALUE
	LDA	#.LOW.VALUE
	STA	DLYCNT3
	LDA	#.HIGH.VALUE
	STA	DLYCNT3+1
	LDA	#C_CNT3_BIT

	TRB	<USER_FLAG_B
	ENDM

M_SET_CNT3_IDX MACRO VALUE,IDX
	LDA	#.LOW.VALUE
	STA	DLYCNT3
	LDA	#.HIGH.VALUE
	STA	DLYCNT3+1
	LDA	#C_CNT3_BIT
	TRB	<USER_FLAG_B
	LDA	#IDX
	STA	DLYCNT3_IDX
	ENDM

	
MR_SET_GAPTIME_FLAG MACRO
	LDA	#C_BIT1
	TSB	<USER_INT_FLAG0
	ENDM
MR_CLR_GAPTIME_FLAG MACRO
	LDA	#C_BIT1
	TRB	<USER_INT_FLAG0
	ENDM
MR_TEST_GAPTIME_FLAG MACRO
	LDA	#C_BIT1
	BIT	<USER_INT_FLAG0
	ENDM
MR_SET_TMGX_GAP_FLAG MACRO
	LDA #C_BIT0
	TSB <USER_INT_FLAG0
	ENDM
MR_CLR_TMGX_GAP_FLAG MACRO
	LDA	#C_BIT0
	TRB	<USER_INT_FLAG0
	ENDM
MR_TEST_TMGX_GAP_FLAG MACRO
	LDA	#C_BIT0
	BIT	<USER_INT_FLAG0
	ENDM

MR_USER_TMGX_ISR MACRO
	MR_SET_TMGX_GAP_FLAG
	JMP	USER_TMGX_ISR
USER_TMGX_ISR_RET:
	ENDM

MR_CHK_SPCH1_EN MACRO
	LDA	#C_CHK_SPCH1_BIT
	TSB	USER_FLAG10
	LDA	#C_SPCH1_BIT
	TRB	USER_FLAG_A
	ENDM
MR_CHK_SPCH2_EN MACRO
	LDA	#C_CHK_SPCH2_BIT
	TSB	USER_FLAG10
	LDA	#C_SPCH2_BIT
	TRB	USER_FLAG_A
	ENDM
MR_CHK_MS1_EN MACRO
	LDA	#C_CHK_MS1_BIT
	TSB	USER_FLAG10
	LDA	#C_MS1_BIT
	TRB	USER_FLAG_A
	ENDM
MR_CHK_EVO1_EN MACRO
	LDA	#C_CHK_EVO1_BIT
	TSB	USER_FLAG10
	LDA	#C_EVO1_BIT
	TRB	USER_FLAG_A
	ENDM

MR_CHK_SPMD_EN MACRO
	LDA	#C_CHK_SPMD_BIT
	TSB	USER_FLAG10
	LDA	#C_SPMD_BIT
	TRB	USER_FLAG_A
	ENDM

MR_CHK_SPCH1_DIS MACRO
	LDA	#C_CHK_SPCH1_BIT
	TRB	USER_FLAG10
	LDA	#C_SPCH1_BIT
	TRB	USER_FLAG_A
	ENDM
MR_CHK_SPCH2_DIS MACRO
	LDA	#C_CHK_SPCH2_BIT
	TRB	USER_FLAG10
	LDA	#C_SPCH2_BIT
	TRB	USER_FLAG_A
	ENDM
MR_CHK_MS1_DIS MACRO
	LDA	#C_CHK_MS1_BIT
	TRB	USER_FLAG10
	LDA	#C_MS1_BIT
	TRB	USER_FLAG_A
	ENDM
MR_CHK_EVO1_DIS MACRO
	LDA	#C_CHK_EVO1_BIT
	TRB	USER_FLAG10
	LDA	#C_EVO1_BIT
	TRB	USER_FLAG_A
	ENDM

MR_CHK_SPMD_DIS MACRO
	LDA	#C_CHK_SPMD_BIT
	TRB	USER_FLAG10
	LDA	#C_SPMD_BIT
	TRB	USER_FLAG_A
	ENDM



;========================================



M_CHK_KEYCH0 MACRO VALUE
	LDA	#C_KEYCH0_BIT
	BIT	USER_FLAG_A
	BEQ	3
	JMP	VALUE
	ENDM
M_CHK_KEYCH1 MACRO VALUE
	LDA	#C_KEYCH1_BIT
	BIT	USER_FLAG_A
	BEQ	3
	JMP	VALUE
	ENDM
M_CHK_KEYCH2 MACRO VALUE
	LDA	#C_KEYCH2_BIT
	BIT	USER_FLAG_A
	BEQ	3
	JMP	VALUE
	ENDM
M_CHK_KEYCH3 MACRO VALUE
	LDA	#C_KEYCH3_BIT
	BIT	USER_FLAG_A
	BEQ	3
	JMP	VALUE
	ENDM
M_CHK_NOTECH0 MACRO VALUE
	LDA	#C_NOTECH0_BIT
	BIT	USER_FLAG_A
	BEQ	3
	JMP	VALUE
	ENDM
M_CHK_NOTECH1 MACRO VALUE
	LDA	#C_NOTECH1_BIT
	BIT	USER_FLAG_A
	BEQ	3
	JMP	VALUE
	ENDM


M_CHK_SPCH1 MACRO VALUE
	LDA	#C_SPCH1_BIT
	BIT	USER_FLAG_A
	BEQ	3
	JMP	VALUE
	ENDM
M_CHK_SPCH2 MACRO VALUE
	LDA	#C_SPCH2_BIT
	BIT	USER_FLAG_A
	BEQ	3
	JMP	VALUE
	ENDM
M_CHK_MS1 MACRO VALUE
	LDA	#C_MS1_BIT
	BIT	USER_FLAG_A
	BEQ	3
	JMP	VALUE
	ENDM
M_CHK_SPCH3 MACRO VALUE
	LDA	#C_SPCH3_BIT
	BIT	USER_FLAG_A
	BEQ	3
	JMP	VALUE
	ENDM
M_CHK_CASI MACRO 	VALUE
	LDA	#C_CASI_BIT
	BIT	USER_FLAG_A
	BEQ	3
	JMP	VALUE
	ENDM
M_CHK_EVO1 MACRO VALUE
	LDA	#C_EVO1_BIT
	BIT	USER_FLAG_A
	BEQ	3
	JMP	VALUE
	ENDM
M_CHK_CNT0 MACRO VALUE
	LDA	#C_CNT0_BIT
	BIT	USER_FLAG_B
	BEQ	3
	JMP	VALUE
	ENDM
M_CHK_CNT1 MACRO VALUE
	LDA	#C_CNT1_BIT
	BIT	USER_FLAG_B
	BEQ	3
	JMP	VALUE
	ENDM
M_CHK_CNT2 MACRO VALUE
	LDA	#C_CNT2_BIT
	BIT	USER_FLAG_B
	BEQ	3
	JMP	VALUE
	ENDM
M_CHK_CNT3 MACRO VALUE
	LDA	#C_CNT3_BIT
	BIT	USER_FLAG_B
	BEQ	3
	JMP	VALUE
	ENDM
M_CHK_VD MACRO VALUE
	LDA	#C_VD_BIT
	BIT	USER_FLAG_B
	BEQ	3
	JMP	VALUE
	ENDM
M_CHK_WP1_PATT_DLYCNT MACRO VALUE
	LDA	#C_WP1_PATT_DLYCNT_BIT
	BIT	USER_FLAG_B
	BEQ	3
	JMP	VALUE
	ENDM


M_CHK_SWPWM_PATT MACRO VALUE
	LDA	#C_SWPWM_PATT_BIT
	BIT	USER_FLAG_B
	BEQ	3
	JMP	VALUE
	ENDM
M_CHK_WP1_PATTEND MACRO VALUE
	LDA	#C_WP1_PATTEND_BIT
	BIT	USER_FLAG_B
	BEQ	3
	JMP	VALUE
	ENDM
M_CHK_EQU_NEXT MACRO VALUE
	LDA	#C_EQU_NEXT_BIT
	BIT	USER_FLAG_B
	BEQ	3
	JMP	VALUE
	ENDM
M_CHK_AUTOCNT MACRO VALUE
	LDA	#C_AUTOCNT_BIT
	BIT	USER_FLAG_B
	BEQ	3
	JMP	VALUE
	ENDM


M_CHK_SKEY0 MACRO VALUE
	LDA	#C_SKEY0_BIT
	BIT	SKEY_FLAG0
	BEQ	3
	JMP	VALUE
	ENDM
M_CHK_SKEY1 MACRO VALUE
	LDA	#C_SKEY1_BIT
	BIT	SKEY_FLAG0
	BEQ	3
	JMP	VALUE
	ENDM
M_CHK_SKEY2 MACRO VALUE
	LDA	#C_SKEY2_BIT
	BIT	SKEY_FLAG0
	BEQ	3
	JMP	VALUE
	ENDM
M_CHK_SKEY3 MACRO VALUE
	LDA	#C_SKEY3_BIT
	BIT	SKEY_FLAG0
	BEQ	3
	JMP	VALUE
	ENDM
M_CHK_SKEY4 MACRO VALUE
	LDA	#C_SKEY4_BIT
	BIT	SKEY_FLAG0
	BEQ	3
	JMP	VALUE
	ENDM
M_CHK_SKEY5 MACRO VALUE
	LDA	#C_SKEY5_BIT
	BIT	SKEY_FLAG0
	BEQ	3
	JMP	VALUE
	ENDM
M_CHK_SKEY6 MACRO VALUE
	LDA	#C_SKEY6_BIT
	BIT	SKEY_FLAG0
	BEQ	3
	JMP	VALUE
	ENDM
M_CHK_SKEY7 MACRO VALUE
	LDA	#C_SKEY7_BIT
	BIT	SKEY_FLAG0
	BEQ	3
	JMP	VALUE
	ENDM
M_CHK_SKEY8 MACRO VALUE
	LDA	#C_SKEY8_BIT
	BIT	SKEY_FLAG1
	BEQ	3
	JMP	VALUE
	ENDM
M_CHK_SKEY9 MACRO VALUE
	LDA	#C_SKEY9_BIT
	BIT	SKEY_FLAG1
	BEQ	3
	JMP	VALUE
	ENDM
M_CHK_SKEY10 MACRO VALUE
	LDA	#C_SKEY10_BIT
	BIT	SKEY_FLAG1
	BEQ	3
	JMP	VALUE
	ENDM
M_CHK_SKEY11 MACRO VALUE
	LDA	#C_SKEY11_BIT
	BIT	SKEY_FLAG1
	BEQ	3
	JMP	VALUE
	ENDM
M_CHK_SKEY12 MACRO VALUE
	LDA	#C_SKEY12_BIT
	BIT	SKEY_FLAG1
	BEQ	3
	JMP	VALUE
	ENDM
M_CHK_SKEY13 MACRO VALUE
	LDA	#C_SKEY13_BIT
	BIT	SKEY_FLAG1
	BEQ	3
	JMP	VALUE
	ENDM
M_CHK_SKEY14 MACRO VALUE
	LDA	#C_SKEY14_BIT
	BIT	SKEY_FLAG1
	BEQ	3
	JMP	VALUE
	ENDM
M_CHK_SKEY15 MACRO VALUE
	LDA	#C_SKEY15_BIT
	BIT	SKEY_FLAG1
	BEQ	3
	JMP	VALUE
	ENDM
;===========================================
M_CHK_KEYCH0_JSRBK0 MACRO L_SUB
	LDA	#C_KEYCH0_BIT
	BIT	USER_FLAG_A
	BEQ	3
	JSR L_SUB
	ENDM
M_CHK_KEYCH1_JSRBK0 MACRO L_SUB
	LDA	#C_KEYCH1_BIT
	BIT	USER_FLAG_A
	BEQ	3
	JSR L_SUB
	ENDM
M_CHK_KEYCH2_JSRBK0 MACRO L_SUB
	LDA	#C_KEYCH2_BIT
	BIT	USER_FLAG_A
	BEQ	3
	JSR L_SUB
	ENDM
M_CHK_KEYCH3_JSRBK0 MACRO L_SUB
	LDA	#C_KEYCH3_BIT
	BIT	USER_FLAG_A
	BEQ	3
	JSR L_SUB
	ENDM
M_CHK_NOTECH0_JSRBK0 MACRO L_SUB
	LDA	#C_NOTECH0_BIT
	BIT	USER_FLAG_A
	BEQ	3
	JSR L_SUB
	ENDM
M_CHK_NOTECH1_JSRBK0 MACRO L_SUB
	LDA	#C_NOTECH1_BIT
	BIT	USER_FLAG_A
	BEQ	3
	JSR L_SUB
	ENDM


M_CHK_SPCH1_JSRBK0 MACRO L_SUB
	LDA	#C_SPCH1_BIT
	BIT	USER_FLAG_A
	BEQ	3
	JSR L_SUB
	ENDM
M_CHK_SPCH2_JSRBK0 MACRO L_SUB
	LDA	#C_SPCH2_BIT
	BIT	USER_FLAG_A
	BEQ	3
	JSR L_SUB
	ENDM
M_CHK_MS1_JSRBK0 MACRO L_SUB
	LDA	#C_MS1_BIT
	BIT	USER_FLAG_A
	BEQ	3
	JSR L_SUB
	ENDM
M_CHK_SPCH3_JSRBK0 MACRO L_SUB
	LDA	#C_SPCH3_BIT
	BIT	USER_FLAG_A
	BEQ	3
	JSR L_SUB
	ENDM
M_CHK_CNT0_JSRBK0 MACRO L_SUB
	LDA	#C_CNT0_BIT
	BIT	USER_FLAG_B
	BEQ	3
	JSR L_SUB
	ENDM
M_CHK_CNT1_JSRBK0 MACRO L_SUB
	LDA	#C_CNT1_BIT
	BIT	USER_FLAG_B
	BEQ	3
	JSR L_SUB
	ENDM
M_CHK_CNT2_JSRBK0 MACRO L_SUB
	LDA	#C_CNT2_BIT
	BIT	USER_FLAG_B
	BEQ	3
	JSR L_SUB
	ENDM
M_CHK_CNT3_JSRBK0 MACRO L_SUB
	LDA	#C_CNT3_BIT
	BIT	USER_FLAG_B
	BEQ	3
	JSR L_SUB
	ENDM
M_CHK_VD_JSRBK0 MACRO L_SUB
	LDA	#C_VD_BIT
	BIT	USER_FLAG_B
	BEQ	3
	JSR L_SUB
	ENDM
M_CHK_WP1_PATT_DLYCNT_JSRBK0 MACRO L_SUB
	LDA	#C_WP1_PATT_DLYCNT_BIT
	BIT	USER_FLAG_B
	BEQ	3
	JSR L_SUB
	ENDM


M_CHK_SWPWM_PATT_JSRBK0 MACRO L_SUB
	LDA	#C_SWPWM_PATT_BIT
	BIT	USER_FLAG_B
	BEQ	3
	JSR L_SUB
	ENDM
M_CHK_WP1_PATTEND_JSRBK0 MACRO L_SUB
	LDA	#C_WP1_PATTEND_BIT
	BIT	USER_FLAG_B
	BEQ	3
	JSR L_SUB
	ENDM
M_CHK_EQU_NEXT_JSRBK0 MACRO L_SUB
	LDA	#C_EQU_NEXT_BIT
	BIT	USER_FLAG_B
	BEQ	3
	JSR L_SUB
	ENDM
M_CHK_AUTOCNT_JSRBK0 MACRO L_SUB
	LDA	#C_AUTOCNT_BIT
	BIT	USER_FLAG_B
	BEQ	3
	JSR L_SUB
	ENDM


M_CHK_SKEY0_JSRBK0 MACRO L_SUB
	LDA	#C_SKEY0_BIT
	BIT	SKEY_FLAG0
	BEQ	3
	JSR L_SUB
	ENDM
M_CHK_SKEY1_JSRBK0 MACRO L_SUB
	LDA	#C_SKEY1_BIT
	BIT	SKEY_FLAG0
	BEQ	3
	JSR L_SUB
	ENDM
M_CHK_SKEY2_JSRBK0 MACRO L_SUB
	LDA	#C_SKEY2_BIT
	BIT	SKEY_FLAG0
	BEQ	3
	JSR L_SUB
	ENDM
M_CHK_SKEY3_JSRBK0 MACRO L_SUB
	LDA	#C_SKEY3_BIT
	BIT	SKEY_FLAG0
	BEQ	3
	JSR L_SUB
	ENDM
M_CHK_SKEY4_JSRBK0 MACRO L_SUB
	LDA	#C_SKEY4_BIT
	BIT	SKEY_FLAG0
	BEQ	3
	JSR L_SUB
	ENDM
M_CHK_SKEY5_JSRBK0 MACRO L_SUB
	LDA	#C_SKEY5_BIT
	BIT	SKEY_FLAG0
	BEQ	3
	JSR L_SUB
	ENDM
M_CHK_SKEY6_JSRBK0 MACRO L_SUB
	LDA	#C_SKEY6_BIT
	BIT	SKEY_FLAG0
	BEQ	3
	JSR L_SUB
	ENDM
M_CHK_SKEY7_JSRBK0 MACRO L_SUB
	LDA	#C_SKEY7_BIT
	BIT	SKEY_FLAG0
	BEQ	3
	JSR L_SUB
	ENDM
M_CHK_SKEY8_JSRBK0 MACRO L_SUB
	LDA	#C_SKEY8_BIT
	BIT	SKEY_FLAG1
	BEQ	3
	JSR L_SUB
	ENDM
M_CHK_SKEY9_JSRBK0 MACRO L_SUB
	LDA	#C_SKEY9_BIT
	BIT	SKEY_FLAG1
	BEQ	3
	JSR L_SUB
	ENDM
M_CHK_SKEY10_JSRBK0 MACRO L_SUB
	LDA	#C_SKEY10_BIT
	BIT	SKEY_FLAG1
	BEQ	3
	JSR L_SUB
	ENDM
M_CHK_SKEY11_JSRBK0 MACRO L_SUB
	LDA	#C_SKEY11_BIT
	BIT	SKEY_FLAG1
	BEQ	3
	JSR L_SUB
	ENDM
M_CHK_SKEY12_JSRBK0 MACRO L_SUB
	LDA	#C_SKEY12_BIT
	BIT	SKEY_FLAG1
	BEQ	3
	JSR L_SUB
	ENDM
M_CHK_SKEY13_JSRBK0 MACRO L_SUB
	LDA	#C_SKEY13_BIT
	BIT	SKEY_FLAG1
	BEQ	3
	JSR L_SUB
	ENDM
M_CHK_SKEY14_JSRBK0 MACRO L_SUB
	LDA	#C_SKEY14_BIT
	BIT	SKEY_FLAG1
	BEQ	3
	JSR L_SUB
	ENDM
M_CHK_SKEY15_JSRBK0 MACRO L_SUB
	LDA	#C_SKEY15_BIT
	BIT	SKEY_FLAG1
	BEQ	3
	JSR L_SUB
	ENDM



;===========================================
;M_PAUSE_WAITKEY_CNT0TO3 MACRO
;	LDA	#C_BIT3	
;	TSB	USER_FLAG10 ;multi flag bit
;	ENDM
;M_RESUME_WAITKEY_CNT0TO3 MACRO
;	LDA	#C_BIT3	
;	TRB	USER_FLAG10 ;multi flag bit
;	ENDM




;===========================================
;===========================================
M_SET_KEYCH0_FLAG MACRO
	LDA	#C_KEYCH0_BIT
	TSB	USER_FLAG_A
	ENDM
M_SET_KEYCH1_FLAG MACRO
	LDA	#C_KEYCH1_BIT
	TSB	USER_FLAG_A
	ENDM
M_SET_KEYCH2_FLAG MACRO
	LDA	#C_KEYCH2_BIT
	TSB	USER_FLAG_A
	ENDM
M_SET_KEYCH3_FLAG MACRO
	LDA	#C_KEYCH3_BIT
	TSB	USER_FLAG_A
	ENDM
M_SET_NOTECH0_FLAG MACRO
	LDA	#C_NOTECH0_BIT
	TSB	USER_FLAG_A
	ENDM
M_SET_NOTECH1_FLAG MACRO
	LDA	#C_NOTECH1_BIT
	TSB	USER_FLAG_A
	ENDM

M_SET_FG0_FLAG MACRO
	LDA	#C_FG0_BIT
	TSB	<USER_FLAG_B
	ENDM
M_SET_FG1_FLAG MACRO
	LDA	#C_FG1_BIT
	TSB	<USER_FLAG_B
	ENDM
M_SET_VD_FLAG MACRO
	LDA	#C_VD_BIT
	TSB	USER_FLAG_B
	ENDM
M_SET_WP1_PATTEND_FLAG MACRO
	LDA	#C_WP1_PATTEND_BIT
	TSB	USER_FLAG_B ;wiper patt end
	ENDM


M_SET_EQU_NEXT_FLAG MACRO
	LDA	#C_EQU_NEXT_BIT
	TSB	<USER_FLAG_B
	ENDM


MR_SET_SKEY0_FG MACRO
	LDA	#C_SKEY0_BIT
	TSB	SKEY_FLAG0
	ENDM
MR_SET_SKEY1_FG MACRO
	LDA	#C_SKEY1_BIT
	TSB	SKEY_FLAG0
	ENDM
MR_SET_SKEY2_FG MACRO
	LDA	#C_SKEY2_BIT
	TSB	SKEY_FLAG0
	ENDM
MR_SET_SKEY3_FG MACRO
	LDA	#C_SKEY3_BIT
	TSB	SKEY_FLAG0
	ENDM
MR_SET_SKEY4_FG MACRO
	LDA	#C_SKEY4_BIT
	TSB	SKEY_FLAG0
	ENDM
MR_SET_SKEY5_FG MACRO
	LDA	#C_SKEY5_BIT
	TSB	SKEY_FLAG0
	ENDM
MR_SET_SKEY6_FG MACRO
	LDA	#C_SKEY6_BIT
	TSB	SKEY_FLAG0
	ENDM
MR_SET_SKEY7_FG MACRO
	LDA	#C_SKEY7_BIT
	TSB	SKEY_FLAG0
	ENDM
MR_SET_SKEY8_FG MACRO
	LDA	#C_SKEY8_BIT
	TSB	SKEY_FLAG1
	ENDM
MR_SET_SKEY9_FG MACRO
	LDA	#C_SKEY9_BIT
	TSB	SKEY_FLAG1
	ENDM
MR_SET_SKEY10_FG MACRO
	LDA	#C_SKEY10_BIT
	TSB	SKEY_FLAG1
	ENDM
MR_SET_SKEY11_FG MACRO
	LDA	#C_SKEY11_BIT
	TSB	SKEY_FLAG1
	ENDM
MR_SET_SKEY12_FG MACRO
	LDA	#C_SKEY12_BIT
	TSB	SKEY_FLAG1
	ENDM
MR_SET_SKEY13_FG MACRO
	LDA	#C_SKEY13_BIT
	TSB	SKEY_FLAG1
	ENDM
MR_SET_SKEY14_FG MACRO
	LDA	#C_SKEY14_BIT
	TSB	SKEY_FLAG1
	ENDM
MR_SET_SKEY15_FG MACRO
	LDA	#C_SKEY15_BIT
	TSB	SKEY_FLAG1
	ENDM
M_SET_CASI_FLAG MACRO
	LDA	#C_CASI_BIT
	TSB	USER_FLAG_A
	ENDM

;============================
;===========================================

M_SET_CNT0_FLAG MACRO
	LDA	#C_BIT0
	TSB	<USER_FLAG_B
	ENDM
M_SET_CNT1_FLAG MACRO
	LDA	#C_BIT1
	TSB	<USER_FLAG_B
	ENDM
M_SET_CNT2_FLAG MACRO
	LDA	#C_BIT2
	TSB	<USER_FLAG_B
	ENDM
M_SET_CNT3_FLAG MACRO
	LDA	#C_BIT3
	TSB	<USER_FLAG_B
	ENDM

M_CLR_CNT0_FLAG MACRO
	LDA	#C_BIT0
	TRB	<USER_FLAG_B
	ENDM
M_CLR_CNT1_FLAG MACRO
	LDA	#C_BIT1
	TRB	<USER_FLAG_B
	ENDM
M_CLR_CNT2_FLAG MACRO
	LDA	#C_BIT2
	TRB	<USER_FLAG_B
	ENDM
M_CLR_CNT3_FLAG MACRO
	LDA	#C_BIT3
	TRB	<USER_FLAG_B
	ENDM
M_CLR_CNT4_FLAG MACRO
	LDA	#C_BIT4
	TRB	<USER_FLAG_B
	ENDM
	
MR_CLR_EQU_NEXT_FLAG MACRO
	LDA	#C_EQU_NEXT_BIT
	TRB	<USER_FLAG_B
	ENDM
	
M_CLR_AUTOCNT_FLAG MACRO
	LDA	#C_AUTOCNT_BIT
	TRB	<USER_FLAG_B
	ENDM

;
M_CLR_SPCH1_FLAG MACRO
	LDA	#C_SPCH1_BIT
	TRB	USER_FLAG_A
	ENDM
M_CLR_SPCH2_FLAG MACRO
	LDA	#C_SPCH2_BIT
	TRB	USER_FLAG_A
	ENDM
M_CLR_MS1_FLAG MACRO
	LDA	#C_MS1_BIT
	TRB	USER_FLAG_A
	ENDM
M_CLR_SPCH3_FLAG MACRO
	LDA	#C_SPCH3_BIT
	TRB	USER_FLAG_A
	ENDM
M_CLR_EVO1_FLAG MACRO
	LDA	#C_EVO1_BIT
	TRB	USER_FLAG_A
	ENDM
M_CLR_CASI_FLAG MACRO
	LDA	#C_CASI_BIT
	TRB	USER_FLAG_A
	ENDM
M_CLR_SPMD_FLAG MACRO
	LDA	#C_SPMD_BIT
	TRB	USER_FLAG_A
	ENDM

M_CLR_KEYCH0_FLAG MACRO
	LDA	#C_KEYCH0_BIT
	TRB	USER_FLAG_A
	ENDM
M_CLR_KEYCH1_FLAG MACRO
	LDA	#C_KEYCH1_BIT
	TRB	USER_FLAG_A
	ENDM
M_CLR_KEYCH2_FLAG MACRO
	LDA	#C_KEYCH2_BIT
	TRB	USER_FLAG_A
	ENDM
M_CLR_KEYCH3_FLAG MACRO
	LDA	#C_KEYCH3_BIT
	TRB	USER_FLAG_A
	ENDM
M_CLR_NOTECH0_FLAG MACRO
	LDA	#C_NOTECH0_BIT
	TRB	USER_FLAG_A
	ENDM
M_CLR_NOTECH1_FLAG MACRO
	LDA	#C_NOTECH1_BIT
	TRB	USER_FLAG_A
	ENDM
M_CLR_SKEY0_FLAG MACRO
	LDA	#C_SKEY0_BIT
	TRB	SKEY0_FLAG
	ENDM
M_CLR_SKEY1_FLAG MACRO
	LDA	#C_SKEY1_BIT
	TRB	SKEY1_FLAG
	ENDM
M_CLR_SKEY2_FLAG MACRO
	LDA	#C_SKEY2_BIT
	TRB	SKEY2_FLAG
	ENDM
M_CLR_SKEY3_FLAG MACRO
	LDA	#C_SKEY3_BIT
	TRB	SKEY3_FLAG
	ENDM
M_CLR_SKEY4_FLAG MACRO
	LDA	#C_SKEY4_BIT
	TRB	SKEY4_FLAG
	ENDM
M_CLR_SKEY5_FLAG MACRO
	LDA	#C_SKEY5_BIT
	TRB	SKEY5_FLAG
	ENDM
M_CLR_SKEY6_FLAG MACRO
	LDA	#C_SKEY6_BIT
	TRB	SKEY6_FLAG
	ENDM
M_CLR_SKEY7_FLAG MACRO
	LDA	#C_SKEY7_BIT
	TRB	SKEY7_FLAG
	ENDM
M_CLR_SKEY8_FLAG MACRO
	LDA	#C_SKEY8_BIT
	TRB	SKEY8_FLAG
	ENDM
M_CLR_SKEY9_FLAG MACRO
	LDA	#C_SKEY9_BIT
	TRB	SKEY9_FLAG
	ENDM
M_CLR_SKEY10_FLAG MACRO
	LDA	#C_SKEY10_BIT
	TRB	SKEY10_FLAG
	ENDM
M_CLR_SKEY11_FLAG MACRO
	LDA	#C_SKEY11_BIT
	TRB	SKEY11_FLAG
	ENDM
M_CLR_SKEY12_FLAG MACRO
	LDA	#C_SKEY12_BIT
	TRB	SKEY12_FLAG
	ENDM
M_CLR_SKEY13_FLAG MACRO
	LDA	#C_SKEY13_BIT
	TRB	SKEY13_FLAG
	ENDM
M_CLR_SKEY14_FLAG MACRO
	LDA	#C_SKEY14_BIT
	TRB	SKEY14_FLAG
	ENDM
M_CLR_SKEY15_FLAG MACRO
	LDA	#C_SKEY15_BIT
	TRB	SKEY15_FLAG
	ENDM
M_CLR_SKEY16_FLAG MACRO
	LDA	#C_SKEY16_BIT
	TRB	SKEY16_FLAG
	ENDM
M_CLR_SKEY17_FLAG MACRO
	LDA	#C_SKEY17_BIT
	TRB	SKEY17_FLAG
	ENDM
M_CLR_SKEY18_FLAG MACRO
	LDA	#C_SKEY18_BIT
	TRB	SKEY18_FLAG
	ENDM
M_CLR_SKEY19_FLAG MACRO
	LDA	#C_SKEY19_BIT
	TRB	SKEY19_FLAG
	ENDM
M_CLR_SKEY20_FLAG MACRO
	LDA	#C_SKEY20_BIT
	TRB	SKEY20_FLAG
	ENDM
M_CLR_SKEY21_FLAG MACRO
	LDA	#C_SKEY21_BIT
	TRB	SKEY21_FLAG
	ENDM
M_CLR_SKEY22_FLAG MACRO
	LDA	#C_SKEY22_BIT
	TRB	SKEY22_FLAG
	ENDM
M_CLR_SKEY23_FLAG MACRO
	LDA	#C_SKEY23_BIT
	TRB	SKEY23_FLAG
	ENDM

M_CLR_FG0_FLAG MACRO
	LDA	#C_FG0_BIT
	TRB	<USER_FLAG_B
	ENDM
M_CLR_FG1_FLAG MACRO
	LDA	#C_FG1_BIT
	TRB	<USER_FLAG_B
	ENDM
M_CLR_VD_FLAG MACRO
	LDA	#C_VD_BIT
	TRB	USER_FLAG_B
	ENDM
M_CLR_WP1_PATTEND_FLAG MACRO
	LDA	#C_WP1_PATTEND_BIT
	TRB	USER_FLAG_B ;wiper patt end
	ENDM
