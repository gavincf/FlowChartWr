
;=========================================================================
; CONST
;=========================================================================

;=======================================
;	<< WAITKEY_CONST.ASM >>
;===========================================

C_DLYCNT0_ENABLE	EQU	1
C_DLYCNT1_ENABLE	EQU	1
C_DLYCNT2_ENABLE	EQU	0
C_DLYCNT3_ENABLE	EQU	0
C_DLYCNT4_ENABLE	EQU	0
C_DLYCNT5_ENABLE	EQU	0

;

B_USER_MS1_BUSY	EQU	C_BIT2 ; midi end event in the end of midi

;========================================
;---------------------------------
; FLAG_B
;---------------------------------
C_CNT0_BIT		EQU	C_BIT0
C_CNT1_BIT		EQU	C_BIT1
C_CNT2_BIT		EQU	C_BIT2
C_CNT3_BIT		EQU	C_BIT3

C_VD_BIT		EQU	C_BIT4
C_AUTOCNT_BIT	EQU	C_BIT7

;---------------------------------
; Multi used FLAG_B
;---------------------------------
C_EQU_NEXT_BIT			EQU	C_BIT5
C_SWPWM_PATTEND_BIT			EQU	C_BIT6
C_WP1_PATTEND_BIT	EQU	C_BIT6

;---------------------------------
; FLAG_A
;---------------------------------
C_SPCH1_BIT		EQU	C_BIT0
C_SPCH2_BIT		EQU	C_BIT1
C_MS1_BIT		EQU	C_BIT2
C_KEYCH0_BIT	EQU	C_BIT4
C_KEYCH1_BIT	EQU	C_BIT5

;-------------------------------------
;;multi used
;-------------------------------------
C_SPMD_BIT EQU C_BIT3
;C_SPCH3_BIT		EQU	C_BIT3
;C_EVO1_BIT		EQU	C_BIT3
C_CASI_BIT		EQU	C_BIT3
C_KEYCH2_BIT	EQU	C_BIT6
C_KEYCH3_BIT	EQU	C_BIT7
C_NOTECH0_BIT	EQU	C_BIT6 ;multi used
C_NOTECH1_BIT	EQU	C_BIT7 ;multi used
;-------------------------------------


;--------------------------
;USER_FLAG10
;--------------------------
C_CHK_SPCH1_BIT		EQU	C_BIT0
C_CHK_SPCH2_BIT		EQU	C_BIT1
C_CHK_MS1_BIT		EQU	C_BIT2
;C_CHK_SPCH3_BIT		EQU	C_BIT3
C_CHK_SPMD_BIT	EQU	C_BIT3

;C_MS_SP_AUTOS		EQU	C_BIT0
;C_NOTEONCH0_AUTOS	EQU	C_BIT1
;C_NOTEONCH1_AUTOS	EQU	C_BIT2


	
;====================================
C_SKEY0_BIT	EQU	C_BIT0
C_SKEY1_BIT	EQU	C_BIT1
C_SKEY2_BIT	EQU	C_BIT2
C_SKEY3_BIT	EQU	C_BIT3
C_SKEY4_BIT	EQU	C_BIT4
C_SKEY5_BIT	EQU	C_BIT5
C_SKEY6_BIT	EQU	C_BIT6
C_SKEY7_BIT	EQU	C_BIT7
C_SKEY8_BIT	EQU	C_BIT0
C_SKEY9_BIT	EQU	C_BIT1
C_SKEY10_BIT	EQU	C_BIT2
C_SKEY11_BIT	EQU	C_BIT3
C_SKEY12_BIT	EQU	C_BIT4
C_SKEY13_BIT	EQU	C_BIT5
C_SKEY14_BIT	EQU	C_BIT6
C_SKEY15_BIT	EQU	C_BIT7


C_DRUMLED_LEN	EQU	1000000H-500*100/C_100GAP_FXF15
;----------------------
; RAM
;-----------------------------
;.IF ( C_EVP_DLY_EN .EQ. 1 )
;
;WB_EVP_DLYCNT	DS	1

;.ENDIF



;===========================================
;pls define below RAMs
.IF ( C_DLYCNT0_ENABLE .EQ. 1 )
DLYCNT0	DS	1
DLYCNT01	DS	1
DLYCNT0_IDX DS	1 ;IdleTimer
IdleTimer EQU DLYCNT0_IDX
.ENDIF

.IF ( C_DLYCNT1_ENABLE .EQ. 1 )
DLYCNT1	DS	1
DLYCNT11	DS	1
DLYCNT1_IDX DS	1
.ENDIF

.IF ( C_DLYCNT2_ENABLE .EQ. 1 )
DLYCNT2	DS	1
DLYCNT21	DS	1
DLYCNT2_IDX DS 1
.ENDIF
.IF ( C_DLYCNT3_ENABLE .EQ. 1 )
DLYCNT3	DS	1
DLYCNT31	DS	1
DLYCNT3_IDX DS 1
.ENDIF


USER_FLAG_A	DS	1
;.0=1: CH1 END
;.1=1: CH2 END
;.2=1: MS1 END
;.3=1: ALL END; multi
;.4=1: new KEY0
;.5=1: new KEY1
;.6=1: new KEY2 / NOTE0 END
;.7=1: new KEY3 / NOTE1 END

USER_FLAG_B	DS	1
;.0: CNT0
;.1: CNT1
;.2: CNT2
;.3: CNT3 ; multi  / WP1_PATT_DLYCNT0
;.4: LVD ;multi
;.5: EQU_NEXT ; multi
;.6: SWPWM/WP1 PATT end; multi
;.7: auto CNT REACH



USER_FLAG10	DS	1
;
;.0=1: CHECK CH1
;.1=1: CHECK CH2
;.2=1: CHECK MS ; share for used
;.3=1: CHECK CH3; share for used; PAUSE FOR CNT0-3


USER_INT_FLAG0	DS	1
;.0=1: TMG0 2MS REACH
;.1=1: fxf:5.33M@6144MHZ,1.64MS@20MHZ REACH
USER_INT_CNT0	DS	1
	

.if (CHIPSERIES = 'N588H') .OR. (CHIPSERIES = 'N588J')
	.IF ( C_ULTRAIO_IO_EN .EQ. 0 )
	.IFNDEF BP0M_USER
		.IF ( C_BP0M_USER_USED .EQ. 1 )
BP0M_USER	DS	1
		.ENDIF
	.ENDIF
	.ENDIF

	.IF ( C_ULTRAIO_IO_EN .EQ. 0 )
	.IFNDEF BP1M_USER
		.IF ( C_BP1M_USER_USED .EQ. 1 )
BP1M_USER	DS	1
		.ENDIF
	.ENDIF
	.ENDIF
	.IF ( C_ULTRAIO_IO_EN .EQ. 0 )
	.IFNDEF BP2M_USER
		.IF ( C_BP2M_USER_USED .EQ. 1 )
BP2M_USER	DS	1
		.ENDIF
	.ENDIF
	.ENDIF
.ENDIF

.IF ( C_BP0_STATUS_EN .EQ. 1 )
BP0_STATUS	DS	1
.ENDIF
.IF ( C_BP1_STATUS_EN .EQ. 1 )
BP1_STATUS	DS	1
.ENDIF
.IF ( C_BP2_STATUS_EN .EQ. 1 )
BP2_STATUS	DS	1
.ENDIF
.IF ( C_BP3_STATUS_EN .EQ. 1 )
BP3_STATUS	DS	1
.ENDIF

.IFDEF C_N588HJ_LVD_EN
USER_ST0	DS	1
.ENDIF
.IFDEF C_N588L_LVD_EN
USER_ST0	DS	1
.ENDIF
.IFDEF C_N589VD_EN
USER_ST0	DS	1
.ENDIF
.IFDEF C_N589VD1_EN
USER_ST0	DS	1
.ENDIF


WB_KEYCH_CODE	DS	C_KEYCH_MAX ;not include matrix KEY






