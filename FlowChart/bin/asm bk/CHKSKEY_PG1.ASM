
;=========================================================================
; const
;=========================================================================


C_SKEY0DUTY_BUF_BIT EQU	24
C_SKEY0DUTY_DLYCNT EQU	8
C_SKEY0DUTY_THD EQU	C_SKEY0DUTY_DLYCNT*90/100 ; 90%
C_SKEY0DUTY_CNT_THD_H EQU	18 ; X/24
C_SKEY0DUTY_CNT_THD_L EQU	12 ; X/24 ; time too close to  C_SKEY0DUTY_CNT_THD_H  : release more quick
;time: 1ms * C_SKEY0DUTY_DLYCNT *24 (bit) = 192ms
C_SKEY0DUTY_CNT_MASK EQU	11111000B
C_SKEY0DUTY_CNT_FULL EQU	11000000B



;=========================================================================
; code
;=========================================================================

.IF(C_SKEY0DUTY_EN .EQ. 1)
CHKSKEY0DUTY:
	
SKEY0DUTY_DLYCNT:
	LDA	#B_SKEY0
	BIT	!SR_SKEY0_PORT
	BNE	CHKSKEY0DUTY_S01
;LOW
	INC	R_SKEY0DUTY_L_CNT

CHKSKEY0DUTY_S01:

	LDA	R_SKEY0DUTY_CNT
	AND	#0111B
	CMP	#C_SKEY0DUTY_DLYCNT-1
	BCS	CHKSKEY0DUTY_S10
	
	INC	R_SKEY0DUTY_CNT

	JMP	CHKSKEY0DUTY_RET

CHKSKEY0DUTY_S10:
;----------------------------------
;CMP;
	LDA	#111B
	TRB	R_SKEY0DUTY_CNT
	
;store flag
	LDA	R_SKEY0DUTY_L_CNT
	AND	#0FH
	CMP	#C_SKEY0DUTY_THD
	BCS	CHKSKEY0DUTY_S11
;<Thd
	LDA	R_SKEY0DUTY_CNT
	LSR	A
	LSR	A
	TAX
	LDA	SKEYDUTY_TBL0,X
	TAY
	INX
	LDA	SKEYDUTY_TBL0,X
	AND	R_SKEY0DUTY_FG,Y
	STA	R_SKEY0DUTY_FG,Y
	
	BRA	CHKSKEY0DUTY_S12
CHKSKEY0DUTY_S11:
;>Thd
	LDA	R_SKEY0DUTY_CNT
	LSR	A
	LSR	A
	TAX
	LDA	SKEYDUTY_TBL1,X
	TAY
	INX
	LDA	SKEYDUTY_TBL1,X
	ORA	R_SKEY0DUTY_FG,Y
	STA	R_SKEY0DUTY_FG,Y

CHKSKEY0DUTY_S12:
;
	LDA	#1111B
	TRB	R_SKEY0DUTY_L_CNT
;check full
;
	LDA	R_SKEY0DUTY_L_CNT
	BIT	#C_BIT7
	BNE	CHKSKEY0DUTY_S20;full

	LDA	R_SKEY0DUTY_CNT
	AND	#C_SKEY0DUTY_CNT_MASK
	CMP	#C_SKEY0DUTY_CNT_FULL
	BNE	CHKSKEY0DUTY_S13
; FULL

	LDA	#C_BIT7
	TSB	R_SKEY0DUTY_L_CNT ;SET FLAG
	BRA	CHKSKEY0DUTY_S20
	
CHKSKEY0DUTY_S13:

;NEXT BIT
	CLC
	LDA	R_SKEY0DUTY_CNT
	ADC	#C_SKEY0DUTY_DLYCNT
	STA	R_SKEY0DUTY_CNT
	
	JMP	CHKSKEY0DUTY_RET
	
CHKSKEY0DUTY_S20:; BIT index loop
	LDA	R_SKEY0DUTY_CNT
	AND	#C_SKEY0DUTY_CNT_MASK
	CMP	#C_SKEY0DUTY_CNT_FULL
	BCC	CHKSKEY0DUTY_S21
	LDA	#C_SKEY0DUTY_CNT_MASK
	TRB	R_SKEY0DUTY_CNT
	BRA	CHKSKEY0DUTY_S211
CHKSKEY0DUTY_S21:
;NEXT BIT
	CLC
	LDA	R_SKEY0DUTY_CNT
	ADC	#C_SKEY0DUTY_DLYCNT
	STA	R_SKEY0DUTY_CNT

CHKSKEY0DUTY_S211:
;count the '1'
;
	STZ	REG_HL
	STZ	REG_EA
CHKSKEY0DUTY_S22:
	LDA	REG_EA
	ASL	A
	TAX
	LDA	SKEYDUTY_TBL1,X
	TAY
	INX
	LDA	SKEYDUTY_TBL1,X
	AND	R_SKEY0DUTY_FG,Y
	BEQ	CHKSKEY0DUTY_S23
	INC	REG_HL
	
CHKSKEY0DUTY_S23:
	
	INC	REG_EA
	LDA	REG_EA
	CMP	#C_SKEY0DUTY_BUF_BIT
	BCC	CHKSKEY0DUTY_S22
;
;	LDA	REG_HL
;	CMP	#10
;	BCC	DEBUG1
;	NOP
;DEBUG1:

	LDA	REG_HL
	CMP	#C_SKEY0DUTY_CNT_THD_H
	BCS	SKEY0DUTY_LARGE
	CMP	#C_SKEY0DUTY_CNT_THD_L
	BCC	SKEY0DUTY_LESS
;invalid
	JMP	CHKSKEY0DUTY_RET

SKEY0DUTY_LARGE:
; > 40% : threshold H

	LDA	#B_SKEY0
	BIT	<R_SKEY0_STATUS
	BEQ	CHKSKEY0DUTY_QUIT
	LDA	#B_SKEY0
	TRB	<R_SKEY0_STATUS

	JMP	SKEY0DUTY_F
SKEY0DUTY_F_RET:

	JMP	CHKSKEY0DUTY_RET
SKEY0DUTY_LESS:
; < 20% : threshold L

	LDA	#B_SKEY0
	BIT	<R_SKEY0_STATUS
	BNE	CHKSKEY0DUTY_QUIT
	LDA	#B_SKEY0
	TSB	<R_SKEY0_STATUS

	JMP	SKEY0DUTY_R
SKEY0DUTY_R_RET:
;----------------------------------

CHKSKEY0DUTY_QUIT:
	
	JMP	CHKSKEY0DUTY_RET
	
	
.ENDIF

;=========================================================================
; code user
;=========================================================================

SKEYDUTY_TBL0:
	DB	0,11111110B
	DB	0,11111101B
	DB	0,11111011B
	DB	0,11110111B
	DB	0,11101111B
	DB	0,11011111B
	DB	0,10111111B
	DB	0,01111111B

	DB	1,11111110B
	DB	1,11111101B
	DB	1,11111011B
	DB	1,11110111B
	DB	1,11101111B
	DB	1,11011111B
	DB	1,10111111B
	DB	1,01111111B

	DB	2,11111110B
	DB	2,11111101B
	DB	2,11111011B
	DB	2,11110111B
	DB	2,11101111B
	DB	2,11011111B
	DB	2,10111111B
	DB	2,01111111B
SKEYDUTY_TBL1:
	DB	0,00000001B
	DB	0,00000010B
	DB	0,00000100B
	DB	0,00001000B
	DB	0,00010000B
	DB	0,00100000B
	DB	0,01000000B
	DB	0,10000000B

	DB	1,00000001B
	DB	1,00000010B
	DB	1,00000100B
	DB	1,00001000B
	DB	1,00010000B
	DB	1,00100000B
	DB	1,01000000B
	DB	1,10000000B

	DB	2,00000001B
	DB	2,00000010B
	DB	2,00000100B
	DB	2,00001000B
	DB	2,00010000B
	DB	2,00100000B
	DB	2,01000000B
	DB	2,10000000B

	DB	3,00000001B
	DB	3,00000010B
	DB	3,00000100B
	DB	3,00001000B
	DB	3,00010000B
	DB	3,00100000B
	DB	3,01000000B
	DB	3,10000000B
