;=========================================================================
; CONST0
;=======================================
;	<< PROJ_CONST.H >>
;===========================================
;	IO¿Ú ÅäÖÃ
;=========================================
;=========================================================================

;==============================================
.IF (CHIPSERIES = 'N588H') .OR. (CHIPSERIES = 'N588J')
C_POI_BP0D			EQU	11111111B
C_POI_BP0M_BAK	EQU	11111111B ; 1: input:pullhigh / 0:output / Floating
C_POI_BP0_OP		EQU	11111111B ;1: ouput high/pullhigh / 0:output 0/input Floating

C_POI_BP1D			EQU	11111111B
C_POI_BP1M_BAK	EQU	11111111B; 1: input:pullhigh / 0:output / Floating
C_POI_BP1_OP		EQU	11111111B; 1: ouput high/pullhigh / 0:output 0/input Floating

C_POI_BP2D			EQU	11B;BP2D[0], and BP24~BP27 by BP2D[1]
C_POI_BP2M_BAK	EQU	11111111B; 1: input:pullhigh / 0:output / Floating
C_POI_BP2_OP		EQU	11111111B; 1: ouput high/pullhigh / 0:output 0/input Floating

C_PWON_BP0D			EQU	00000000B
C_PWON_BP0M_BAK	EQU	00000000B ; 1: input:pullhigh / 0:output / Floating
C_PWON_BP0_OP		EQU	11111111B ;1: ouput high/pullhigh / 0:output 0/input Floating

C_PWON_BP1D			EQU	11111111B
C_PWON_BP1M_BAK	EQU	11111111B; 1: input:pullhigh / 0:output / Floating
C_PWON_BP1_OP		EQU	11111111B; 1: ouput high/pullhigh / 0:output 0/input Floating

C_PWON_BP2D			EQU	11B;BP2D[0], and BP24~BP27 by BP2D[1]
C_PWON_BP2M_BAK	EQU	11111111B; 1: input:pullhigh / 0:output / Floating
C_PWON_BP2_OP		EQU	11111111B; 1: ouput high/pullhigh / 0:output 0/input Floating

;=============================================
;»½ÐÑ×´Ì¬£º
C_WAKEUP_BP0D			EQU	00000000B
C_WAKEUP_BP0M_BAK	EQU	00000000B ; 1: input:pullhigh / 0:output / Floating
C_WAKEUP_BP0_OP		EQU	11111111B ;1: ouput high/pullhigh / 0:output 0/input Floating

C_WAKEUP_BP1D			EQU	11111111B
C_WAKEUP_BP1M_BAK	EQU	11111111B; 1: input:pullhigh / 0:output / Floating
C_WAKEUP_BP1_OP		EQU	11111111B; 1: ouput high/pullhigh / 0:output 0/input Floating

C_WAKEUP_BP2D			EQU	11B;BP2D[0], and BP24~BP27 by BP2D[1]
C_WAKEUP_BP2M_BAK	EQU	11111111B; 1: input:pullhigh / 0:output / Floating
C_WAKEUP_BP2_OP		EQU	11111111B; 1: ouput high/pullhigh / 0:output 0/input Floating

C_WAKEUP1_BP0D			EQU	C_WAKEUP_BP0D
C_WAKEUP1_BP0M_BAK	EQU	C_WAKEUP_BP0M_BAK ; 1: input:pullhigh / 0:output / Floating
C_WAKEUP1_BP0_OP		EQU	C_WAKEUP_BP0_OP ;1: ouput high/pullhigh / 0:output 0/input Floating

C_WAKEUP1_BP1D			EQU	C_WAKEUP_BP1D
C_WAKEUP1_BP1M_BAK	EQU	C_WAKEUP_BP1M_BAK; 1: input:pullhigh / 0:output / Floating
C_WAKEUP1_BP1_OP		EQU	C_WAKEUP_BP1_OP; 1: ouput high/pullhigh / 0:output 0/input Floating

C_WAKEUP1_BP2D			EQU	C_WAKEUP_BP2D;BP2D[0], and BP24~BP27 by BP2D[1]
C_WAKEUP1_BP2M_BAK	EQU	C_WAKEUP_BP2M_BAK; 1: input:pullhigh / 0:output / Floating
C_WAKEUP1_BP2_OP		EQU	C_WAKEUP_BP2_OP; 1: ouput high/pullhigh / 0:output 0/input Floating



;
;=========================================
;ÐÝÃß×´Ì¬£º
C_PWOFF_BP0D			EQU	00000000B
C_PWOFF_BP0M_BAK	EQU	00000000B ; 1: input:pullhigh / 0:output / Floating
C_PWOFF_BP0_OP		EQU	11111111B ;1: ouput high/pullhigh / 0:output 0/input Floating

C_PWOFF_BP1D			EQU	11111111B
C_PWOFF_BP1M_BAK	EQU	11111111B; 1: input:pullhigh / 0:output / Floating
C_PWOFF_BP1_OP		EQU	11111111B; 1: ouput high/pullhigh / 0:output 0/input Floating

C_PWOFF_BP2D			EQU	11B;BP2D[0], and BP24~BP27 by BP2D[1]
C_PWOFF_BP2M_BAK	EQU	11111111B; 1: input:pullhigh / 0:output / Floating
C_PWOFF_BP2_OP		EQU	11111111B; 1: ouput high/pullhigh / 0:output 0/input Floating

; For 'BK0_STORE_BPX_WO_BOND'
C_BP0_BOND EQU	00000000B
C_BP1_BOND EQU	00000000B
C_BP2_BOND EQU	00000000B

;================================
;wakeup enable
C_BP1EN_PWOFF	EQU	00000001B
.ENDIF

;==============================================
;==========================================
.IF (CHIPSERIES = 'N589A') .OR. (CHIPSERIES = 'N589B').OR. (CHIPSERIES = 'N589C').OR. (CHIPSERIES = 'N589D')
;touch pin: D:M:R:1:1:1
;RTP:D:M:R:1:0:1
;ADC PIN:D:M:R:1:0:1: input floating
;BP00:ICECLK_D: D:M:R: 0:1:0
;BP01:ICEDAT_D: D:M:R: 0:1:0 
	
C_BP0_TOUCH_MASK	EQU	00000000B;07:VDET:por: set to floating;
C_BP1_TOUCH_MASK	EQU	00000000B; BP17=RTP:touch function
C_BP2_TOUCH_MASK	EQU	00000000B
C_BP3_TOUCH_MASK	EQU	00000000B
;------------------------------------------------------------
C_POI_BP2MF1		EQU	00B ; configure BP2 to SPI IO

C_POI_BP0D		EQU	00101011B
C_POI_BP0M		EQU	11111111B
C_POI_BP0R		EQU	00101011B;07:VDET:por: set to floating;
	
C_POI_BP1D		EQU	01111000B ; BP16:TOUCH;set 0:0:0
C_POI_BP1M		EQU	11111111B
C_POI_BP1R		EQU	11111000B

C_POI_BP2D		EQU	11101111B
C_POI_BP2M		EQU	11111111B
C_POI_BP2R		EQU	11111111B


.IF(C_BP3_EXIST .EQ. 1 )
C_POI_BP3D		EQU	11111111B
C_POI_BP3M		EQU	11111111B
C_POI_BP3R		EQU	11111111B
.ENDIF

C_PWON_BP2MF1		EQU	00B ; configure BP2 to SPI IO
C_PWON_BP0D		EQU	00101011B
C_PWON_BP0M		EQU	11111111B
C_PWON_BP0R		EQU	00101011B;07:VDET:por: set to floating;
	
C_PWON_BP1D		EQU	01111000B ; BP16:TOUCH;set 0:0:0
C_PWON_BP1M		EQU	11111111B
C_PWON_BP1R		EQU	11111000B

C_PWON_BP2D		EQU	11101111B
C_PWON_BP2M		EQU	11111111B
C_PWON_BP2R		EQU	11111111B


.IF(C_BP3_EXIST .EQ. 1 )
C_PWON_BP3D		EQU	11111111B
C_PWON_BP3M		EQU	11111111B
C_PWON_BP3R		EQU	11111111B
.ENDIF

;=============================================
C_WAKEUP_IO_DIF EQU 0
;»½ÐÑ×´Ì¬£º
C_WAKEUP_BP2MF1		EQU	00B ; configure BP2 to SPI IO
C_WAKEUP_BP0D		EQU	00101011B
C_WAKEUP_BP0M		EQU	11111111B
C_WAKEUP_BP0R		EQU	00101011B

C_WAKEUP_BP1D		EQU	01111000B; BP16:TOUCH  ;set 0:0:0 
C_WAKEUP_BP1M		EQU	11111111B
C_WAKEUP_BP1R		EQU	11111000B

C_WAKEUP_BP2D		EQU	11101111B
C_WAKEUP_BP2M		EQU	11111111B
C_WAKEUP_BP2R		EQU	11111111B
.IF(C_BP3_EXIST .EQ. 1 )
C_WAKEUP_BP3D		EQU	11111111B
C_WAKEUP_BP3M		EQU	11111111B
C_WAKEUP_BP3R		EQU	11111111B
.ENDIF

C_WAKEUP1_BP2MF1		EQU	00B ; configure BP2 to SPI IO
C_WAKEUP1_BP0D		EQU	C_WAKEUP_BP0D
C_WAKEUP1_BP0M		EQU	C_WAKEUP_BP0M
C_WAKEUP1_BP0R		EQU	C_WAKEUP_BP0R
C_WAKEUP1_BP1D		EQU	C_WAKEUP_BP1D
C_WAKEUP1_BP1M		EQU	C_WAKEUP_BP1M
C_WAKEUP1_BP1R		EQU	C_WAKEUP_BP1R
C_WAKEUP1_BP2D		EQU	C_WAKEUP_BP2D
C_WAKEUP1_BP2M		EQU	C_WAKEUP_BP2M
C_WAKEUP1_BP2R		EQU	C_WAKEUP_BP2R
.IF(C_BP3_EXIST .EQ. 1 )
C_WAKEUP1_BP3D		EQU	C_WAKEUP_BP3D
C_WAKEUP1_BP3M		EQU	C_WAKEUP_BP3M
C_WAKEUP1_BP3R		EQU	C_WAKEUP_BP3R
.ENDIF
;

;
;=========================================
C_PWOFF_IO_DIF EQU 0
;ÐÝÃß×´Ì¬£º
C_PWOFF_BP2MF1		EQU	00B ; configure BP2 to SPI IO
;with touch
C_PWOFF_BP0D		EQU	00101011B
C_PWOFF_BP0M		EQU	11111111B
C_PWOFF_BP0R		EQU	00101011B


C_PWOFF_BP1D		EQU	01111000B; BP16:TOUCH ;set 0:0:0  
C_PWOFF_BP1M		EQU	11111111B
C_PWOFF_BP1R		EQU	11111000B

C_PWOFF_BP2D		EQU	11101111B
C_PWOFF_BP2M		EQU	11111111B
C_PWOFF_BP2R		EQU	11111111B
.IF(C_BP3_EXIST .EQ. 1 )
C_PWOFF_BP3D		EQU	11111111B
C_PWOFF_BP3M		EQU	11111111B
C_PWOFF_BP3R		EQU	11111111B
.ENDIF

C_PWOFF1_BP2MF1		EQU	00B ; configure BP2 to SPI IO

C_PWOFF1_BP0D		EQU	11111111B
C_PWOFF1_BP0M		EQU	11111111B
C_PWOFF1_BP0R		EQU	11111111B

C_PWOFF1_BP1D		EQU	11111111B;touch:BP16
C_PWOFF1_BP1M		EQU	11111111B
C_PWOFF1_BP1R		EQU	11111111B

C_PWOFF1_BP2D		EQU	11111111B
C_PWOFF1_BP2M		EQU	11111111B
C_PWOFF1_BP2R		EQU	11111111B
.IF(C_BP3_EXIST .EQ. 1 )
C_PWOFF1_BP3D		EQU	11111111B
C_PWOFF1_BP3M		EQU	11111111B
C_PWOFF1_BP3R		EQU	11111111B
.ENDIF


; For 'BK0_STORE_BPX_WO_BOND'
C_BP0_BOND EQU	00000000B
C_BP1_BOND EQU	00000000B
C_BP2_BOND EQU	00000000B
C_BP3_BOND EQU	00000000B

;================================
;»½ÐÑÔÊÐí£ºwakeup enable
C_BP0EN_PWOFF		EQU	00000001B
C_BP1EN_PWOFF		EQU	00000000B
C_BP2EN_PWOFF		EQU	00000000B
C_BP3EN_PWOFF		EQU	00000000B

C_BP0EN_PWOFF1	EQU	00000000B
C_BP1EN_PWOFF1	EQU	00000000B
C_BP2EN_PWOFF1	EQU	00000000B
C_BP3EN_PWOFF1	EQU	00000000B

.ENDIF
;==========================================
.if (CHIPSERIES = 'N567G') .OR. (CHIPSERIES = 'N567H') .OR. (CHIPSERIES = 'N567K')
;=========================================
;ÉÏµç×´Ì¬
;==================================================
;IO configure:
C_POI_BPD	EQU	11111111B
C_POI_BPM	EQU	11111111B ; 
C_POI_BP0	EQU	11111111B
C_POI_BP1	EQU	11111111B
C_POI_BP2	EQU	11111111B
C_PWON_BPD	EQU	11001111B
C_PWON_BPM	EQU	11111111B ; 
C_PWON_BP0	EQU	11111111B
C_PWON_BP1	EQU	11111111B
C_PWON_BP2	EQU	11111111B

;=============================================
;»½ÐÑ×´Ì¬£º

C_WAKEUP_BPD	EQU	11001111B
C_WAKEUP_BPM	EQU	11111111B ; 
C_WAKEUP_BP0	EQU	11111111B
C_WAKEUP_BP1	EQU	11111111B
C_WAKEUP_BP2	EQU	11111111B


C_WAKEUP1_BPD		EQU	C_WAKEUP_BPD	
C_WAKEUP1_BPM		EQU	C_WAKEUP_BPM	
C_WAKEUP1_BP0		EQU	C_WAKEUP_BP0	
C_WAKEUP1_BP1		EQU	C_WAKEUP_BP1	
C_WAKEUP1_BP2		EQU	C_WAKEUP_BP2	
;
;=========================================
;ÐÝÃß×´Ì¬£º

C_PWOFF_BPD	EQU	11001111B
C_PWOFF_BPM	EQU	11111111B ; 
C_PWOFF_BP0	EQU	11111111B
C_PWOFF_BP1	EQU	11111111B
C_PWOFF_BP2	EQU	11111111B


; For 'BK0_STORE_BPX_WO_BOND'
C_BP0_BOND EQU	00000000B
C_BP1_BOND EQU	00000000B
C_BP2_BOND EQU	00000000B


;================================
;note: f and _r should be paird
C_BP0EN_F_PWOFF	EQU	00000000B
C_BP0EN_R_PWOFF	EQU	00000000B
C_BP1EN_F_PWOFF	EQU	00000000B
C_BP1EN_R_PWOFF	EQU	00000000B
C_BP2EN_F_PWOFF	EQU	00000000B
C_BP2EN_R_PWOFF	EQU	00000000B


;==========================================


;==========================================
.ENDIF

.IF (CHIPSERIES 	=	'N588L')
;=========================================
;ÉÏµç×´Ì¬
;==================================================
;IO configure:

C_POI_BPD		EQU	11111111B
C_POI_BPM		EQU	11111111B
C_POI_BP0		EQU	11111111B
C_POI_BP1		EQU	11111111B
C_POI_BP2		EQU	11111111B

C_PWON_BPD		EQU	11001111B
C_PWON_BPM		EQU	11111111B
C_PWON_BP0		EQU	11111111B
C_PWON_BP1		EQU	11111111B
C_PWON_BP2		EQU	11111111B


;=============================================
;»½ÐÑ×´Ì¬£º
C_WAKEUP_BPD		EQU	11001111B
C_WAKEUP_BPM		EQU	11111111B
C_WAKEUP_BP0		EQU	11111111B
C_WAKEUP_BP1		EQU	11111111B
C_WAKEUP_BP2		EQU	11111111B
;

C_WAKEUP1_BPD		EQU	C_WAKEUP_BPD	
C_WAKEUP1_BPM		EQU	C_WAKEUP_BPM	
C_WAKEUP1_BP0		EQU	C_WAKEUP_BP0	
C_WAKEUP1_BP1		EQU	C_WAKEUP_BP1	
C_WAKEUP1_BP2		EQU	C_WAKEUP_BP2	
;
;=========================================
;ÐÝÃß×´Ì¬£º
C_PWOFF_BPD		EQU	11001111B
C_PWOFF_BPM		EQU	11111111B
C_PWOFF_BP0		EQU	11111111B
C_PWOFF_BP1		EQU	11111111B
C_PWOFF_BP2		EQU	11111111B

; For 'BK0_STORE_BPX_WO_BOND'
C_BP0_BOND EQU	00000000B
C_BP1_BOND EQU	00000000B
C_BP2_BOND EQU	00000000B

;================================
;wakeup enable
;F bit according to R bit,
C_BP0EN_F_PWOFF	EQU	00000000B
C_BP0EN_R_PWOFF	EQU	00000000B
C_BP1EN_F_PWOFF	EQU	00000001B
C_BP1EN_R_PWOFF	EQU	00000001B
C_BP2EN_F_PWOFF	EQU	00000000B
C_BP2EN_R_PWOFF	EQU	00000000B

.ENDIF

C_UART_EN EQU 0
