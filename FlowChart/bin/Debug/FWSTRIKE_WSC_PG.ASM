










C_FORWARDSTRIKE_HORT_START EQU 12+C_SHIFT_PLUS









C_FORWARDSTRIKE_HORT_MOVE1_P EQU C_SHIFT_PLUS+15

C_FORWARDSTRIKE_HORT_END_N EQU C_SHIFT_PLUS-0








L_FORWARDSTRIKE_OV:
 LDA R_FORWARDSTRIKE_OV_DLYCNT
 BEQ L_FORWARDSTRIKE_OV_S20
 INC R_FORWARDSTRIKE_OV_DLYCNT
 BNE L_FORWARDSTRIKE_OV_S20
 
 STZ R_FORWARDSTRIKE_CHK_STEP
 
 LDA R_SWIPE_FLAG1
 CMP #1
 BNE L_FORWARDSTRIKE_OV_S20
 
 M_SET_KEYCH0_FLAG
 STZ WB_KEYCH_CODE
 
L_FORWARDSTRIKE_OV_S20:
 RTS





CHK_FORWARDSTRIKE:

 LDA R_1ST_AVR_CNT
 CMP #16
 BCC CHK_FORWARDSTRIKE_EXIT_J1

 LDA R_FORWARDSTRIKE_STEP_DLYCNT
 BEQ CHK_FORWARDSTRIKE_S010
 INC R_FORWARDSTRIKE_STEP_DLYCNT
 BEQ CHK_FORWARDSTRIKE_S010


CHK_FORWARDSTRIKE_EXIT_J1:
 
 JMP CHK_FORWARDSTRIKE_EXIT
 
CHK_FORWARDSTRIKE_S010:
 LDX R_GSENSOR_SAVEP
 BNE CHK_FORWARDSTRIKE_S011
 LDX #32
CHK_FORWARDSTRIKE_S011:
 DEX

 LDA R_SAVEX_BASE,X
 CLC
 ADC #C_SHIFT_PLUS
 STA R_HORIZONTAL_VAL_P
 LDA R_SAVEY_BASE,X
 CLC
 ADC #C_SHIFT_PLUS
 STA R_VERTICAL_VAL_P
 LDA R_SAVEZ_BASE,X
 CLC
 ADC #C_SHIFT_PLUS
 STA R_ZVAL


 LDA R_FORWARDSTRIKE_CHK_STEP
 ASL A
 TAX
 JMP (CHK_FORWARDSTRIKE_TBL,X)
CHK_FORWARDSTRIKE_TBL:
 DW CHK_FORWARDSTRIKE_0
 DW CHK_FORWARDSTRIKE_1
 DW CHK_FORWARDSTRIKE_2
 DW CHK_FORWARDSTRIKE_EXIT

CHK_FORWARDSTRIKE_0:

 LDA R_HORIZONTAL_VAL_P
 CMP #C_FORWARDSTRIKE_HORT_START
 BCS CHK_FORWARDSTRIKE_0_RELEASE

 
 INC R_FORWARDSTRIKE_CNT
 BNE CHK_FORWARDSTRIKE_0_EXIT
 DEC R_FORWARDSTRIKE_CNT
CHK_FORWARDSTRIKE_0_EXIT:
 JMP CHK_FORWARDSTRIKE_EXIT

CHK_FORWARDSTRIKE_0_RELEASE:





 STZ R_FORWARDSTRIKE_CNT


 MR_SET_FORWARDSTRIKE_IDX 0,1
 MR_SET_FORWARDSTRIKE_OV 


 JMP CHK_FORWARDSTRIKE_EXIT

CHK_FORWARDSTRIKE_0_RELEASE_RESET:
 STZ R_FORWARDSTRIKE_CNT 
 JMP CHK_FORWARDSTRIKE_EXIT

CHK_FORWARDSTRIKE_1:

 LDA R_HORIZONTAL_VAL_P
.IF (C_HORIZONTAL_DIR .EQ. C_PLUS )
 CMP #C_FORWARDSTRIKE_HORT_MOVE1_N
 BCS CHK_FORWARDSTRIKE_1_RECOUNT
.ELSE
 CMP #C_FORWARDSTRIKE_HORT_MOVE1_P
 BCC CHK_FORWARDSTRIKE_1_RECOUNT
.ENDIF

 MR_SET_FORWARDSTRIKE_OV

 INC R_FORWARDSTRIKE_CNT
 LDA R_FORWARDSTRIKE_CNT
 CMP #2
 BCC CHK_FORWARDSTRIKE_1_EXIT
 STZ R_FORWARDSTRIKE_CNT



 MR_SET_FORWARDSTRIKE_IDX 256-2,2
 
 JMP CHK_FORWARDSTRIKE_EXIT

 MR_SET_FORWARDSTRIKE_IDX 0,0
 
CHK_FORWARDSTRIKE_1_TIMEOUT:
 MR_STOP_FORWARDSTRIKE_OV
CHK_FORWARDSTRIKE_1_RECOUNT: 
 STZ R_FORWARDSTRIKE_CNT
 JMP CHK_FORWARDSTRIKE_EXIT

CHK_FORWARDSTRIKE_1_EXIT:
 JMP CHK_FORWARDSTRIKE_EXIT
 
CHK_FORWARDSTRIKE_2:

 LDA R_HORIZONTAL_VAL_P
.IF (C_HORIZONTAL_DIR .EQ. C_PLUS )
 CMP #C_FORWARDSTRIKE_HORT_END_P

 BCC CHK_FORWARDSTRIKE_2_EXIT
.ELSE
 CMP #C_FORWARDSTRIKE_HORT_END_N

 BCS CHK_FORWARDSTRIKE_2_EXIT
.ENDIF

 MR_SET_FORWARDSTRIKE_OV
 

 M_SET_KEYCH0_FLAG
 STZ WB_KEYCH_CODE
 STZ R_SWIPE_FLAG1


 MR_SET_FORWARDSTRIKE_IDX 0,0
 MR_STOP_FORWARDSTRIKE_OV
 
 STZ R_FORWARDSTRIKE_CNT

 JMP CHK_FORWARDSTRIKE_EXIT
CHK_FORWARDSTRIKE_2_TIMEOUT:
 MR_SET_FORWARDSTRIKE_OV

CHK_FORWARDSTRIKE_2_RECOUNT:
 STZ R_FORWARDSTRIKE_CNT

CHK_FORWARDSTRIKE_2_EXIT:
 JMP CHK_FORWARDSTRIKE_EXIT

CHK_FORWARDSTRIKE_EXIT:
 RTS
