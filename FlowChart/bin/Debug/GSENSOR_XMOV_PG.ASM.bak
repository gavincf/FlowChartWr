
;detect g -sensor
;X MOV; 1g->0
;USED 3 step detect:
;0,start motion;start motion;>800ms
;1,moving detecting; can be skip
;2,ending motion detecting



;@+/-4g;12bit,32

C_XMOV_VERT_START EQU 32+C_SHIFT_PLUS

C_XMOV_VERT_END EQU C_SHIFT_PLUS

C_XMOV_DIF EQU 8


;==================================
;check 
;===================================
;===================================
; ; @FXF15
;===================================
L_XMOV_OV:
	LDA	R_XMOV_OV_DLYCNT
	BEQ	L_XMOV_OV_S20
	INC	R_XMOV_OV_DLYCNT
	BNE	L_XMOV_OV_S20
	
	STZ	R_XMOV_CHK_STEP
	
	LDA	R_SWIPE_FLAG1
	CMP	#1
	BNE	L_XMOV_OV_S20
	
	M_SET_KEYCH0_FLAG
	STZ	WB_KEYCH_CODE
	
L_XMOV_OV_S20:
	RTS


;===================================
;WAITKEY_GAP2B_PCC
;===================================
CHK_XMOV:
;
	LDA	R_1ST_AVR_CNT
	CMP	#16
	BCC	CHK_XMOV_EXIT_J1

	LDA	R_XMOV_STEP_DLYCNT
	BEQ	CHK_XMOV_S010
	INC	R_XMOV_STEP_DLYCNT
	BEQ	CHK_XMOV_S010

;COUNTTING for next step	
CHK_XMOV_EXIT_J1:
	
	JMP	CHK_XMOV_EXIT
	
CHK_XMOV_S010:
	LDX	R_Gsensor_SaveP
	BNE	CHK_XMOV_S011
	LDX	#32
CHK_XMOV_S011:
	DEX

	LDA	R_SaveX_Base,X
	CLC
	ADC	#C_SHIFT_PLUS
	STA	R_HORIZONTAL_VAL_P
	LDA	R_SaveY_Base,X
	CLC
	ADC	#C_SHIFT_PLUS
	STA	R_VERTICAL_VAL_P;;
	LDA	R_SaveZ_Base,X
	CLC
	ADC	#C_SHIFT_PLUS
	STA	R_ZVAL;;Z
;

	LDA	R_XMOV_CHK_STEP
	ASL	A
	TAX
	JMP	(CHK_XMOV_TBL,X)
CHK_XMOV_TBL:
	DW	CHK_XMOV_0;check action start
	DW	CHK_XMOV_1;
	DW	CHK_XMOV_2
	DW	CHK_XMOV_EXIT;

CHK_XMOV_0:;default = 0;;OTHER MODE;

	LDA	R_HORIZONTAL_VAL_P
	CMP	#C_XMOV_HORT_START
	BCS	CHK_XMOV_0_RELEASE
;hold
	
	INC	R_XMOV_CNT
	BNE	CHK_XMOV_0_EXIT
	DEC	R_XMOV_CNT
CHK_XMOV_0_EXIT:
	JMP	CHK_XMOV_EXIT

CHK_XMOV_0_RELEASE:;release

;	LDA	R_XMOV_CNT
;	CMP	#1;5 ; *48MS
;	BCC	CHK_XMOV_0_RELEASE_RESET

	STZ	R_XMOV_CNT
;
;according to waveform of G-SENSOR data
	MR_SET_XMOV_IDX 0,1;delay 150ms
	MR_SET_XMOV_OV ;500ms
;

	JMP	CHK_XMOV_EXIT

CHK_XMOV_0_RELEASE_RESET:
	STZ	R_XMOV_CNT ;restart
	JMP	CHK_XMOV_EXIT

CHK_XMOV_1:;moving

	LDA	R_HORIZONTAL_VAL_P;X
.IF (C_HORIZONTAL_DIR .EQ. C_PLUS )
	CMP	#C_XMOV_HORT_MOVE1_N
	BCS	CHK_XMOV_1_RECOUNT
.ELSE
	CMP	#C_XMOV_HORT_MOVE1_P
	BCC	CHK_XMOV_1_RECOUNT
.ENDIF
;start
	MR_SET_XMOV_OV

	INC	R_XMOV_CNT
	LDA	R_XMOV_CNT
	CMP	#2
	BCC	CHK_XMOV_1_EXIT
	STZ	R_XMOV_CNT
;

;according to waveform of G-SENSOR data
	MR_SET_XMOV_IDX 256-2,2;@GAP2=48MS ;delay
	
	JMP	CHK_XMOV_EXIT
;CHK_XMOV_1_RESET: ;RESET
	MR_SET_XMOV_IDX 0,0;
	
CHK_XMOV_1_TIMEOUT:
	MR_STOP_XMOV_OV
CHK_XMOV_1_RECOUNT: 
	STZ	R_XMOV_CNT
	JMP	CHK_XMOV_EXIT

CHK_XMOV_1_EXIT:
	JMP	CHK_XMOV_EXIT
	
CHK_XMOV_2:

	LDA	R_HORIZONTAL_VAL_P;X
.IF (C_HORIZONTAL_DIR .EQ. C_PLUS )
	CMP	#C_XMOV_HORT_END_P
;	BCC	CHK_XMOV_2_TIMEOUT
	BCC	CHK_XMOV_2_EXIT
.ELSE
	CMP	#C_XMOV_HORT_END_N
;	BCS	CHK_XMOV_2_TIMEOUT
	BCS	CHK_XMOV_2_EXIT
.ENDIF
;TRIGGER
	MR_SET_XMOV_OV
	
;get
	M_SET_KEYCH0_FLAG
	STZ	WB_KEYCH_CODE
	STZ	R_SWIPE_FLAG1

;according to waveform of G-SENSOR data
	MR_SET_XMOV_IDX 0,0;
	MR_STOP_XMOV_OV
	
	STZ	R_XMOV_CNT
;
	JMP	CHK_XMOV_EXIT
CHK_XMOV_2_TIMEOUT:
	MR_SET_XMOV_OV

CHK_XMOV_2_RECOUNT:
	STZ	R_XMOV_CNT

CHK_XMOV_2_EXIT:
	JMP	CHK_XMOV_EXIT

CHK_XMOV_EXIT:
	RTS
