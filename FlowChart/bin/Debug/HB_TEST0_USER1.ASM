




C_TEST0_MODE EQU E0H
C_TEST0_ENTER EQU E0H

C_TEST0_LVD EQU E6H

C_TEST0_ERROR EQU EEH 
C_TEST0_EXIT EQU EFH 











HB_TEST0_CHK:
 M_INT_ENABLE FXF15_INT_BIT
.IF ( C_TMGX_EN .EQ. 1 )
 MR_TMGX_SET
.ENDIF




 MR_TEST0_DET_PIN
 BEQ HB_TEST0_CHK_S100

HB_TEST0_CHK2_EXIT_J1:
 JMP HB_TEST0_CHK2_EXIT

HB_TEST0_CHK_S100:
 
 M_SET_MODE_NO C_TEST0_ENTER
 
.IF (C_TEST0_3PRESS_IN_FIX_TIME_EN .EQ. 1)

 LDY #256-20 
HB_TEST0_CHK_S11:
 M_WDT_CLR

 JSR BK0_DELAY61440CYCLE 
 
 MR_TEST0_DET_PIN
 BNE HB_TEST0_CHK2_EXIT_J1



 

 INY
 BNE HB_TEST0_CHK_S11



 MR_HB_TEST0_ENTER_SP
 

.IF( C_TEST0_DEBUG .EQ. 1)
 M_SET_CNT0 (1000000H-4000*100/C_100GAP_FXF15)
.ELSE
 M_SET_CNT0 (1000000H-2000*100/C_100GAP_FXF15)
.ENDIF


 M_SET_MODE_NO C_TEST0_ENTER
.IFDEF C_CHK1KEY1_EN
 JSR BK0_CHK1KEY1_HOLD
.ENDIF

 STZ DLYCNT0_IDX 

 
HB_TEST0_CHK2:
 JSR WAITKEY
HB_TEST0_CHK2_CHKFG:

 M_CHK_KEYCH0 HB_TEST0_CHK2_KEYCH0
 M_CHK_CNT0 HB_TEST0_CHK2_CNT0
 
 JMP HB_TEST0_CHK2

HB_TEST0_CHK2_KEYCH0:


 INC DLYCNT0_IDX
 JMP HB_TEST0_CHK2_CHKFG
 
 
HB_TEST0_CHK2_CNT0:


 LDA DLYCNT0_IDX
 CMP #3
 BNE HB_TEST0_CHK2_EXIT
 
 M_SET_MODE_NO C_TEST0_ENTER
 




 JMP TEST0_STEP_TBL_JMP 
 
.ELSE 

 JMP TEST0_STEP_TBL_JMP
 
.ENDIF

HB_TEST0_CHK2_EXIT: 
 JMP HB_TEST0_CHK_RET







TEST0_STEP_TBL_INC_KEY:
 JSR BK0_STOP_ALL

 BRA TEST0_STEP_TBL_INC_WO_SP
TEST0_STEP_TBL_INC_AUTOCNT:
 
 MR_HB_TEST0_STEP_TBL_INC_AUTOCNT_SP
 
TEST0_STEP_TBL_INC_WO_SP:
 M_SET_CNT0 CNT_STOP

 
 MR_ALL_LED_OFF

 INC SYS_MODE_NO
TEST0_STEP_TBL_JMP:
 LDA SYS_MODE_NO
 AND #0FH
 ASL A
 TAX
 JMP (TEST0_STEP_TBL,X)
TEST0_STEP_TBL:
 DW TEST0_VER_PRE
 DW TEST0_LED_PRE
 DW TEST0_SPDUMP_PRE
 DW TEST0_XMOV_PRE
 DW TEST0_YMOV_PRE
 DW TEST0_ZMOV_PRE
 DW TEST0_LVD_PRE
 DW TEST0_WAIT0_PRE
 DW TEST0_EXIT_NRL




TEST0_SEL_PRE:

 
 STZ DLYCNT0_IDX
 M_SET_CNT0 (1000000H-2000*100/C_100GAP_FXF15)
 
TEST0_SEL:
 JSR WAITKEY
TEST0_SEL_CHKFG:
 M_CHK_CNT0 TEST0_SEL_CNT0


 JMP TEST0_SEL
TEST0_SEL_CNT0:

 LDA DLYCNT0_IDX
 BNE TEST0_SEL_CNT0_S10
 INC DLYCNT0_IDX
TEST0_SEL_CNT0_S10:
 LDA SYS_MODE_NO
 AND #0F0H
 ORA DLYCNT0_IDX
 STA SYS_MODE_NO

 JMP TEST0_STEP_TBL_JMP
 


TEST0_SEL_KEYCH0:
 
 INC DLYCNT0_IDX
 
 JMP TEST0_SEL_CHKFG



TEST0_VER_PRE:

 PLAY PN01_96K
 JSR WAIT_SPCH1_W_CHK
 MR_SET_AUTOCNT2_TEST0

 JSR BMA222E_S_TAP_SET


TEST0_VER:
 JSR WAITKEY
TEST0_VER_CHKFG:

 M_CHK_SKEY0 TEST0_STEP_TBL_INC_KEY

 JMP TEST0_VER

 


 
 M_SET_CNT0 (1000000H-500*100/C_100GAP_FXF15)
 JSR BK0_WAIT_DLYCNT0










 JMP TEST0_STEP_TBL_INC_WO_SP


TEST0_XMOV_PRE:
 JSR BK0_STOP_ALL

 PLAY DI_96K+[100MSEC]+DI_96K
 JSR WAIT_SPCH1_W_CHK

 STZ R_XMOV_CHK_STEP
 STZ R_XMOV_CNT
 
TEST0_XMOV:
 JSR WAITKEY
TEST0_XMOV_CHKFG:


 M_CHK_KEYCH0 TEST0_XMOV_KEYCH0

 JMP TEST0_XMOV

TEST0_XMOV_KEYCH0:
 PLAY X_OK_96K
 JSR WAIT_SPCH1_W_CHK

 JMP TEST0_STEP_TBL_INC_WO_SP

TEST0_YMOV_PRE:
 JSR BK0_STOP_ALL
 STZ R_YMOV_CHK_STEP
 STZ R_YMOV_CNT

TEST0_YMOV:
 JSR WAITKEY
TEST0_YMOV_CHKFG:


 M_CHK_KEYCH0 TEST0_YMOV_KEYCH0

 JMP TEST0_YMOV

TEST0_YMOV_KEYCH0:
 PLAY Y_OK_96K
 JSR WAIT_SPCH1_W_CHK

 JMP TEST0_STEP_TBL_INC_WO_SP

TEST0_ZMOV_PRE:
 JSR BK0_STOP_ALL
 STZ R_ZMOV_CHK_STEP
 STZ R_ZMOV_CNT

TEST0_ZMOV:
 JSR WAITKEY
TEST0_ZMOV_CHKFG:


 M_CHK_KEYCH0 TEST0_ZMOV_KEYCH0

 JMP TEST0_ZMOV

TEST0_ZMOV_KEYCH0:
 PLAY Z_OK_96K
 JSR WAIT_SPCH1_W_CHK

 JMP TEST0_STEP_TBL_INC_WO_SP





TEST0_WAIT0_PRE: 
 PLAY PN05_96K
 MR_CHK_SPCH1_EN
 
TEST0_WAIT0:
 JSR WAITKEY
TEST0_WAIT0_CHKFG:

  
 JMP TEST0_WAIT0





TEST0_CHKSUM_PRE:












 CHECKSUM
 LDA <CHECK_RESULT
 BNE TEST0_CHKSUM_ERROR
 LDA <CHECK_RESULT+1
 BNE TEST0_CHKSUM_ERROR

TEST0_CHKSUM_OK:
 
 JMP TEST0_CHKSUM_CORRECT1_PRE


TEST0_CHKSUM_ERROR:

.IF( C_TEST0_DEBUG .EQ. 1)
 BRA TEST0_CHKSUM_OK
.ENDIF

 JMP TEST0_CHKSUM_ERROR1_PRE





TEST0_CHKSUM_CORRECT1_PRE: 
 MR_SET_AUTOCNT2_TEST0





TEST0_CHKSUM_CORRECT1:
 JSR WAITKEY
TEST0_CHKSUM_CORRECT1_CHKFG:


 M_CHK_SPCH1 TEST0_CHKSUM_CORRECT1_SPCH1
 JMP TEST0_CHKSUM_CORRECT1


TEST0_CHKSUM_CORRECT1_AUTOCNT:


.IF ( C_TEST0_AUTO_NEXT_EN .EQ. 1)
 JMP TEST0_STEP_TBL_INC_AUTOCNT
.ELSE
 JMP TEST0_EXIT_NRL
.ENDIF

TEST0_CHKSUM_CORRECT1_KEYCH0:


 JMP TEST0_STEP_TBL_INC_KEY

TEST0_CHKSUM_CORRECT1_SPCH1:
 
 JMP TEST0_STEP_TBL_INC_WO_SP





TEST0_CHKSUM_ERROR1_PRE: 
 MR_SET_AUTOCNT2_TEST0





TEST0_CHKSUM_ERROR1:
 JSR WAITKEY
TEST0_CHKSUM_ERROR1_CHKFG:


 M_CHK_SPCH1 TEST0_CHKSUM_ERROR1_SPCH1
 JMP TEST0_CHKSUM_ERROR1


TEST0_CHKSUM_ERROR1_AUTOCNT:


.IF ( C_TEST0_AUTO_NEXT_EN .EQ. 1)
 JMP TEST0_STEP_TBL_INC_AUTOCNT
.ELSE
 JMP TEST0_EXIT_NRL
.ENDIF

TEST0_CHKSUM_ERROR1_KEYCH0:


 JMP TEST0_STEP_TBL_INC_KEY

TEST0_CHKSUM_ERROR1_SPCH1:
 
 JMP TEST0_EXIT_NRL





TEST0_1KTONE_PRE:

 


 M_SET_CNT0 CNT_STOP


 

 MR_CHK_SPCH1_EN
 

TEST0_1KTONE:
 JSR WAITKEY
TEST0_1KTONE_CHKFG:

 M_CHK_KEYCH0 TEST0_1KTONE_KEYCH0

 M_CHK_SPCH1 TEST0_1KTONE_SPCH1
 
 JMP TEST0_1KTONE
TEST0_1KTONE_SPCH1
 
 JMP TEST0_STEP_TBL_INC_WO_SP


TEST0_1KTONE_AUTOCNT:

 JSR BK0_STOP_ALL
.IF ( C_TEST0_AUTO_NEXT_EN .EQ. 1)
 JMP TEST0_STEP_TBL_INC_AUTOCNT
.ELSE
 JMP TEST0_AUTOCNT_EXIT
.ENDIF

TEST0_1KTONE_KEYCH0:
 
 JSR BK0_STOP_ALL
 JMP TEST0_STEP_TBL_INC_WO_SP





TEST0_KEY_PRE: 



 MR_CHK_SPCH1_EN
 



 MR_SET_AUTOCNT2_TEST0

TEST0_KEY:
 JSR WAITKEY
TEST0_KEY_CHKFG:
 M_CHK_KEYCH0 TEST0_KEY_KEYCH0

 M_CHK_AUTOCNT TEST0_KEY_AUTOCNT
 
 JMP TEST0_KEY
 
TEST0_KEY_KEYCH0:


 JMP TEST0_STEP_TBL_INC_WO_SP
 
TEST0_KEY_AUTOCNT:


.IF ( C_TEST0_AUTO_NEXT_EN .EQ. 1)
 JMP TEST0_STEP_TBL_INC_AUTOCNT
.ELSE
 JMP TEST0_AUTOCNT_EXIT
.ENDIF
 





TEST0_LED_PRE: 
 
 MR_SET_AUTOCNT2_TEST0
 PLAY PN02_96K
 JSR WAIT_SPCH1_W_CHK
 
 JMP TEST0_LED_CNT0
 
TEST0_LED:
 JSR WAITKEY
TEST0_LED_CHKFG:
 M_CHK_SKEY0 TEST0_STEP_TBL_INC_KEY

 M_CHK_CNT0 TEST0_LED_CNT0
 
 JMP TEST0_LED
TEST0_LED_CNT0:
 LDA DLYCNT0_IDX
 ASL A
 TAX
 INC DLYCNT0_IDX
 JMP (TEST0_LED_CNT0_TBL,X)
TEST0_LED_CNT0_TBL:
 DW TEST0_LED_CNT0_0
 DW TEST0_LED_CNT0_1
 DW TEST0_LED_CNT0_2
 DW TEST0_LED_CNT0_3
 DW TEST0_LED_CNT0_4
 DW TEST0_LED_CNT0_5
 DW TEST0_LED_CNT0_6
 DW TEST0_LED_CNT0_7
 DW TEST0_LED_CNT0_8
 DW TEST0_LED_CNT0_9
 DW TEST0_LED_CNT0_10
 DW TEST0_LED_CNT0_11

TEST0_LED_CNT0_11:
 MR_ALL_LED_OFF
 STZ DLYCNT0_IDX
 M_SET_CNT0 (1000000H-1000*100/C_100GAP_FXF15)
 JMP TEST0_LED_CHKFG
 
TEST0_LED_CNT0_1:
TEST0_LED_CNT0_3:
TEST0_LED_CNT0_5:
TEST0_LED_CNT0_7:
TEST0_LED_CNT0_9:
 MR_ALL_LED_OFF
 M_SET_CNT0 (1000000H-1000*100/C_100GAP_FXF15)
 JMP TEST0_LED_CHKFG

TEST0_LED_CNT0_0:
 MR_ALL_LED_OFF
 LDA #C_BIT2
 TSB BP0R
 M_SET_CNT0 (1000000H-2000*100/C_100GAP_FXF15)
 JMP TEST0_LED_CHKFG
TEST0_LED_CNT0_2:
 MR_ALL_LED_OFF
 LDA #C_BIT4
 TSB BP0R
 M_SET_CNT0 (1000000H-2000*100/C_100GAP_FXF15)
 JMP TEST0_LED_CHKFG
TEST0_LED_CNT0_4:
 MR_ALL_LED_OFF
 LDA #C_BIT6
 TSB BP0R
 M_SET_CNT0 (1000000H-2000*100/C_100GAP_FXF15)
 JMP TEST0_LED_CHKFG
TEST0_LED_CNT0_6:
 MR_ALL_LED_OFF
 LDA #C_BIT7
 TSB BP0R
 M_SET_CNT0 (1000000H-2000*100/C_100GAP_FXF15)
 JMP TEST0_LED_CHKFG
TEST0_LED_CNT0_8:
 MR_ALL_LED_OFF
 LDA #C_BIT0
 TSB BP1R
 M_SET_CNT0 (1000000H-2000*100/C_100GAP_FXF15)
 JMP TEST0_LED_CHKFG
TEST0_LED_CNT0_10:
 MR_ALL_LED_OFF
 LDA #C_BIT1
 TSB BP1R
 M_SET_CNT0 (1000000H-2000*100/C_100GAP_FXF15)
 JMP TEST0_LED_CHKFG
 
TEST0_LED_AUTOCNT:


.IF ( C_TEST0_AUTO_NEXT_EN .EQ. 1)
 JMP TEST0_STEP_TBL_INC_AUTOCNT
.ELSE
 JMP TEST0_AUTOCNT_EXIT
.ENDIF




.IF ( C_TEST0_AUTO_NEXT_EN .EQ. 0)
TEST0_AUTOCNT_EXIT:

 
 M_SET_MODE_NO C_TEST0_ERROR

 JSR WAIT_SPCH1_W_CHK
 



 JMP L_ENTER_STOP
.ENDIF
TEST0_EXIT_NRL:
 JSR BK0_STOP_ALL
 JMP L_ENTER_STOP
 





TEST0_LVD_PRE:
 M_SET_MODE_NO C_TEST0_LVD

 PLAY PN04_96K+[200MSEC]
 JSR WAIT_SPCH1_W_CHK

 MR_SET_AUTOCNT2_TEST0
 JSR CHK_LVD_START_LONG 
 
 JMP TEST0_LVD_VD

TEST0_LVD:
 JSR WAITKEY
TEST0_LVD_CHKFG:
 M_CHK_VD TEST0_LVD_VD

 M_CHK_SKEY0 TEST0_STEP_TBL_INC_KEY

 M_CHK_CNT0 TEST0_CNT0


 JMP  TEST0_LVD
TEST0_LVD_SKEY0:
 
 JMP TEST0_STEP_TBL_INC_KEY
TEST0_LVD_VD:

 MR_SET_AUTOCNT2_TEST0
 
 M_DET_N589VD_ST
 BNE TEST0_LVD_VD_LOWVD
 JSR BK0_STOP_ALL
 MR_ALL_LED_OFF
 M_SET_CNT0 CNT_STOP
 
 JMP TEST0_LVD_CHKFG

TEST0_LVD_VD_LOWVD:
 PLAY 0*DI_96K
 MR_ALL_LED_ON

 M_SET_CNT0 (1000000H-500*100/C_100GAP_FXF15) 
 JMP TEST0_LVD_CHKFG
 
TEST0_CNT0:
 M_SET_CNT0 (1000000H-500*100/C_100GAP_FXF15) 
 MR_ALL_LED_INV
 
 JMP TEST0_LVD_CHKFG

TEST0_LVD_AUTOCNT:
 
.IF ( C_TEST0_AUTO_NEXT_EN .EQ. 1)
 JMP TEST0_STEP_TBL_INC_AUTOCNT
.ELSE
 JMP TEST0_EXIT_NRL
.ENDIF

 



TEST0_SPDUMP_PRE:

 PLAY PN03_96K
 JSR WAIT_SPCH1_W_CHK

 M_SET_CNT0 CNT_STOP
 STZ DLYCNT0_IDX 
 MR_CHK_SPCH1_EN

 MR_STOP_AUTOCNT
 JMP TEST0_SPDUMP_CNT0_S10

TEST0_SPDUMP:
 JSR WAITKEY
TEST0_SPDUMP_CHKFG:

 M_CHK_SPCH1 TEST0_SPDUMP_CH1END

 M_CHK_CNT0 TEST0_SPDUMP_CNT0
 
 M_CHK_SKEY0 TEST0_STEP_TBL_INC_KEY

 M_CHK_AUTOCNT TEST0_STEP_TBL_INC_WO_SP
 
 JMP TEST0_SPDUMP
 
TEST0_SPDUMP_CNT0:

 INC DLYCNT0_IDX

TEST0_SPDUMP_CNT0_S10:

 JSR TEST0_SPDUMP_GET_TBL_ADR


 LDY #0
 LDA (<REG_EA),Y
 STA SPCH1_NO
.IF ( C_SPCH1_NO_2B_EN .EQ. 1)
 LDY #1
 LDA (<REG_EA),Y
 STA SPCH1_NO1

 LDA SPCH1_NO1
 AND SPCH1_NO
.ELSE
 LDA SPCH1_NO
.ENDIF
 CMP #0FFH
 BNE TEST0_SPDUMP_CNT0_S100


 MR_SET_AUTOCNT2_TEST0
 
 JMP TEST0_SPDUMP_CHKFG


TEST0_SPDUMP_CNT0_S100: 
 
 M_SET_BANK L_PLAY_SPCH1
 JSR L_PLAY_SPCH1

 JMP TEST0_SPDUMP_CHKFG
TEST0_SPDUMP_CH1END:

 M_SET_CNT0 (1000000H-1000*100/C_100GAP_FXF15)

 JMP TEST0_SPDUMP_CHKFG
 
TEST0_SPDUMP_CH2END:

 M_SET_CNT0 (1000000H-1000*100/C_100GAP_FXF15)

 JMP TEST0_SPDUMP_CHKFG

TEST0_SPDUMP_AUTOCNT:


 JMP L_ENTER_STOP






TEST0_SPDUMP_GET_TBL_ADR:

 LDA #.HIGH.TEST0_SPDUMP_SP_TBL
 STA REG_HL
 LDA #.LOW.TEST0_SPDUMP_SP_TBL
 STA REG_EA

 STZ SPCH1_NO

 LDA DLYCNT0_IDX
 CLC
 ASL A
 ROL SPCH1_NO

 CLC
 ADC REG_EA
 STA REG_EA
 LDA REG_HL
 ADC SPCH1_NO
 STA REG_HL
 RTS




TEST0_SPDUMP_SP_TBL:





 DW CS_ARMOR1
 DW CS_ARMOR2
 DW CS_ARMOR3
 DW CS_FLESH1
 DW CS_FLESH2
 DW CS_FLESH3
 DW CS_TURRET1
 DW CS_TURRET2
 DW CS_TURRET3
 DW CS_ULTIMATE


.IFDEF C_EXT_LANG_EN


.ENDIF                    
 DW 0FFFFH 












