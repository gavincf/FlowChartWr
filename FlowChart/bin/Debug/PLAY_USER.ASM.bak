





;=========================================================================
; CODE0
;=========================================================================

.IFDEF C_GROUP_EN
;==============================
;USED: REG_EA,REG_HL,
;==============================
L_PLAY_GROUP_RANDOM: ; 1st time
;random
;	STZ	SOUND_NO ;temp used

.IFDEF R_GROUP_NEXT
	LDA	#C_GP_NOP_IDX
	STA	R_GROUP_NEXT
.ENDIF
.IFDEF R_EQU_NEXT
	LDA	#C_EQU0_NOP_IDX
	STA	R_EQU_NEXT
.ENDIF

	LDX	<R_GROUP_NO
	LDA	T_GROUP_MAX,X
	CMP	#1
	BNE	L_PLAY_GROUP_RANDOM_S01
; ONLY 1 sound
	LDY	#0
	JMP	L_PLAY_GROUP_RANDOM_S11
	
L_PLAY_GROUP_RANDOM_S01:
	
;-----------------------------------------------------
;=======================================
L_GET_DUMMY_RANDOM:
;1, select table
	LDX	<R_GROUP_NO
	LDA	R_GROUP_RANDOM_NO,X
	CMP	#0FFH
	BNE	L_GET_DUMMY_RANDOM_NEXT ;NEXT
;new group
	LDA	T_GROUP_MAX,X
	TAX
	LDA	T_RANDOM_TABLE_NO,X
	CMP	#1
	BEQ	L_GET_DUMMY_RANDOM_S10; ONLY 1 RANDOM GROUP
	STA	REG_EA
	JSR	BK0_GET_RANDOM0
	BRA	L_GET_DUMMY_RANDOM_S20
L_GET_DUMMY_RANDOM_S10:
	STZ	REG_EA
;
L_GET_DUMMY_RANDOM_S20:
;REG_EA; 1st time: group no
	STZ	REG_HL ;temp used
	LDX	<R_GROUP_NO
L_GET_DUMMY_RANDOM_S01:
	LDA	REG_EA ; group no
	BEQ	L_GET_DUMMY_RANDOM_S02
	LDA	T_GROUP_MAX,X
	CLC
	ADC	REG_HL
	STA	REG_HL
	DEC	REG_EA ; -1
	BRA	L_GET_DUMMY_RANDOM_S01
L_GET_DUMMY_RANDOM_S02:
	LDA	REG_HL
	STA	R_GROUP_RANDOM_NO,X; STORE TO each BUF
	BRA	L_GET_DUMMY_RANDOM_S100
;
L_GET_DUMMY_RANDOM_NEXT:
	LDX	<R_GROUP_NO
	LDA	R_GROUP_RANDOM_NO,X ; +1
	CLC
	ADC	#1
	STA	R_GROUP_RANDOM_NO,X; STORE TO each BUF
	
L_GET_DUMMY_RANDOM_S100:
	LDX	<R_GROUP_NO
	LDY	R_GROUP_RANDOM_NO,X

	LDA	T_GROUP_MAX,X
	ASL	A
	TAX
	LDA	BK0_RANDOM_TBL,X
	STA	P0_ADDR
	INX
	LDA	BK0_RANDOM_TBL,X
	STA	P0_ADDR+1
;
	LDA	(<P0_ADDR),Y
	CMP	#0FFH
	BNE	L_GET_DUMMY_RANDOM_EXIT
	LDX	<R_GROUP_NO
	LDA	#0
	STA	<R_GROUP_RANDOM_NO,X ;reset
	BRA	L_GET_DUMMY_RANDOM_S100
L_GET_DUMMY_RANDOM_EXIT:;OUT:ACC
	TAY ;Y: EQU TABLE sel

L_PLAY_GROUP_RANDOM_S11: 
	LDA	<R_GROUP_NO
	ASL	A
	TAX
	LDA	T_EQU_GROUP,X ; EQU TABLE
	STA	<P0_ADDR
	INX
	LDA	T_EQU_GROUP,X ; EQU TABLE
	STA	<P0_ADDR+1

L_PLAY_GROUP_RANDOM_S12:
	LDA	(<P0_ADDR),Y
	STA	R_EQU_NO
	
	JMP	BK0_PLAY_EQU

.ENDIF
.IF ( C_SPCH2_ENABLE .EQ. 1)
L_PLAY_SPCH2:


	.IF ( C_AUTOSLEEP_WAITKEY_EN .EQ. 1 )
	MR_AUTOSLEEP_SPCH2_BUSY
	.ENDIF

	LDA	SPCH2_NO
	STA	SOUND_NO
	BRA	L_PLAY_SP_REAL
.ENDIF
L_PLAY_SPCH1:


.IF ( C_AUTOSLEEP_WAITKEY_EN .EQ. 1 )
	MR_AUTOSLEEP_SPCH1_BUSY
.ENDIF

;
.IFDEF C_EQU0_EN
	
	MR_SET_EQU0_DLYCNT CNT_STOP

	MR_SET_SP_FG

.ENDIF

	LDA	SPCH1_NO
	STA	SOUND_NO
	
L_PLAY_SP_REAL:

.IFDEF C_EXT_LANG_EN
	LDA	SPCH1_NO1
	BNE	L_PLAY_SP_S100
.ENDIF
	
	LDA	SOUND_NO
	BIT	#C_BIT7
	BNE	L_PLAY_SP_S010

	ASL	A
	TAX
	JMP	(L_PLAY_SP_TBL,X)
L_PLAY_SP_S010:
	ASL	A
	TAX
	JMP	(L_PLAY_SP_TBL2,X)

.IFDEF C_EXT_LANG_EN
L_PLAY_SP_S100:
	
	LDA	SPCH1_NO

	ASL	A
	TAX
	JMP	(L2_PLAY_SP_TBL,X)
.ENDIF


L_PLAY_SPCH1_END:
	MR_CHK_SPCH1_EN
	RTS
L_PLAY_SPCH2_END:
	MR_CHK_SPCH2_EN
	RTS
L_PLAY_MS1_END:
	MR_CHK_MS1_EN
	RTS
	
L_PLAY_SP_TBL2:

;
;=========================================================================
; CODE1
;=========================================================================

L2_PLAY_SP_TBL:


;---------------------------------------------


