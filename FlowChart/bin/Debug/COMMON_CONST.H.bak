
;==========================================
;Module version: V01I;2018/11/12 星期一 下午 1:45:50
;==========================================

;----------------------
; CONST
;-----------------------------
C_TRUE	EQU	1
C_FALSE	EQU	0



;=====================================
;=====================================
;
; Function configure
;
;=====================================
;=======================================


C_TMGX_EN EQU	1
C_KEYCH_MAX		EQU	3; for define RAM


.IF (CHIPSERIES = 'N589A') .OR. (CHIPSERIES = 'N589B') .OR. (CHIPSERIES = 'N589C') .OR. (CHIPSERIES = 'N589D')
C_DPD_TABLE_EN EQU 1; for N589

SR_BP0	EQU	BP0R
SR_BP1	EQU	BP1R
SR_BP2	EQU	BP2R
	.IF(C_BP3_EXIST .EQ. 1 )
SR_BP3	EQU	BP3R
	.ENDIF
.ELSE
C_DPD_TABLE_EN EQU 0; for N589 only
SR_BP0	EQU	BP0
SR_BP1	EQU	BP1
	.IF(C_BP2_EXIST .EQ. 1 )
SR_BP2	EQU	BP2
	.ENDIF
	.IF(C_BP3_EXIST .EQ. 1 )
SR_BP3	EQU	BP3
	.ENDIF;(C_BP3_EXIST .EQ. 1 )
.ENDIF;(CHIPSERIES = 'N589A') .OR. (CHIPSERIES = 'N589B') .OR. (CHIPSERIES = 'N589C') .OR. (CHIPSERIES = 'N589D')







;========================
;	AUTOSLEEP_RAM.H
;========================
C_AUTOSLEEP_WAITKEY_EN EQU	0
;autosleep when spch1,ch2,ms end

C_TOUCH_IIC_ENABLE	EQU	0


C_SCORE_2_3DIGIT_EN	EQU	0
C_SCORE_2_4DIGIT_EN	EQU	0


;============================================
;============================================

; CONST
;-----------------------------
C_NOP				EQU	0FFH
XXH				EQU	0FEH ; 按键位置空


;=============================================

C_BIT0			EQU	01H
C_BIT1			EQU	02H
C_BIT2			EQU	04H
C_BIT3			EQU	08H
C_BIT4			EQU	10H
C_BIT5			EQU	20H
C_BIT6			EQU	40H
C_BIT7			EQU	80H

C_BIT0V			EQU	11111110B
C_BIT1V			EQU	11111101B
C_BIT2V			EQU	11111011B
C_BIT3V			EQU	11110111B
C_BIT4V			EQU	11101111B
C_BIT5V			EQU	11011111B
C_BIT6V			EQU	10111111B
C_BIT7V			EQU	01111111B

.if (CHIPSERIES = 'N589A') .OR. (CHIPSERIES = 'N589B') .OR. (CHIPSERIES = 'N589C') .OR. (CHIPSERIES = 'N589D')
	.IF (C_SYS_CLOCK .EQ. 10000)
C_100GAP_FXF15 EQU	 322;@FYS=10MHZ;*100 ; N589 :FXF15
C_100GAP_TMX0 EQU	 200;@FYS=10MHZ;*100 ; N589 :TMG/TMA
	.ENDIF
.ELSE
C_100GAP_FXF15 EQU	 533;*100 ; N567GHK,N588L,N588HJ :FXF15
.ENDIF
CNT_STOP		EQU	0000000h
T001000MS		EQU	(1000000H-1000*100/C_100GAP_FXF15)


.IF (CHIPSERIES = 'N589A') .OR. (CHIPSERIES = 'N589B') .OR. (CHIPSERIES = 'N589C') .OR. (CHIPSERIES = 'N589D')
	.IF (C_SYS_CLOCK .EQ. 10000)
C_GAP2 EQU	 48; ; N589 ;64MS;3.2MS*15
T0001S_GAP2		EQU	(1000000H-1000/C_GAP2)
	.ENDIF
.ELSE
C_GAP2 EQU	 64; ; N567GHK,N588L,N588HJ :FXF15; *21.3ms
T0001S_GAP2		EQU	(1000000H-1000/C_GAP2)
C_GAP3 EQU	 42; ; N567GHK,N588L,N588HJ :FXF15
T0001S_GAP3		EQU	(1000000H-1000/C_GAP3)
C_GAP4 EQU	 64; ; N567GHK,N588L,N588HJ :FXF15
T000500MS_GAP4		EQU	(1000000H-500/C_GAP4)
T0001S_GAP4		EQU	(1000000H-1000/C_GAP4)
T0002S_GAP4		EQU	(1000000H-2000/C_GAP4)
T0004S_GAP4		EQU	(1000000H-4000/C_GAP4)
T0008S_GAP4		EQU	(1000000H-8000/C_GAP4)
T000128MS_GAP4		EQU	(1000000H-100/C_GAP4)
T000200MS_GAP4		EQU	(1000000H-200/C_GAP4)
T000400MS_GAP4		EQU	(1000000H-400/C_GAP4)

.ENDIF

;============================================
.if (CHIPSERIES = 'N588H') .OR. (CHIPSERIES = 'N588J')
	 ; IEF0
PORT_INT_BIT	EQU	01H
TIMER0_INT_BIT	EQU	02H
TIMER1_INT_BIT	EQU	04H
TIMERG0_INT_BIT	EQU	08H
FXF13_INT_BIT	EQU	10H
FXF10_INT_BIT	EQU	20H
;
FXF15_INT_BIT	EQU	80H

.ENDIF


	.IF (CHIPSERIES = 'N588L')
FXF15_INT_BIT	EQU	0020H
TIMERG1_INT_BIT	EQU	0004H
	.ENDIF

	.IF (CHIPSERIES = 'N567G') .OR. (CHIPSERIES = 'N567H') .OR. (CHIPSERIES = 'N567K')
FXF15_INT_BIT	EQU	0020H
TIMERG1_INT_BIT	EQU	0004H
	.ENDIF

.IF (CHIPSERIES = 'N589A') .OR. (CHIPSERIES = 'N589B') .OR. (CHIPSERIES = 'N589C') .OR. (CHIPSERIES = 'N589D')
	 ; IEF0
PORT_INT_BIT	EQU	0001H
TIMERA_INT_BIT	EQU	0002H

TIMERG_INT_BIT	EQU	0010H
FXF10_INT_BIT	EQU	0020H
FXF13_INT_BIT	EQU	0040H
FXF15_INT_BIT	EQU	0080H

ADC_INT_BIT	EQU	0200H
LRCT_INT_BIT	EQU	0200H

.ENDIF





